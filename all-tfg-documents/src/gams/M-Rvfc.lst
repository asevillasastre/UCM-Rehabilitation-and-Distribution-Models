GAMS 41.2.0  5110e5ff Nov 14, 2022          WEX-WEI x86 64bit/MS Windows - 02/25/23 12:27:48 Page 1
modelo sencillo reconstruccion + reparto 1
C o m p i l a t i o n


   2   
   3  Set
   4  j Nodos. Representan los asentamientos. /0*9/
   5  t Periodos. Se asumen de misma duracion ademas de que todos los arcos se pueden recorrer en uno de estos periodos
   6   /0*6/
   7  v Tipos de vehiculo /0*2/
   8  ;
   9   
  10  Alias
  11  (j,i,k)
  12  ;
  13   
  14  Parameters
  15  dem(j) Demanda por cada asentamiento de un  unico recurso en toneladas
  16                          /0 0,
  17                           1 1,
  18                           2 1,
  19                           3 1,
  20                           4 8,
  21                           5 4,
  22                           6 4,
  23                           7 3,
  24                           8 2,
  25                           9 7/
  26  max_coste Maximo presupuesto que se puede invertir
  27   /20/
  28  max_puentes Maximo numero de puentes que podemos reconstruir previo paso (un puente por cada sentido consideramos un grafo orientado)
  29   /2/
  30  capacidad_vehiculo(v) Capacidad de hacer partir 1 vehiculo de tipo v /0 1,1 2,2 5/
  31  coste_vehiculo(v) Coste total y fijo de hacer partir 1 vehiculo de tipo v /0 10,1 15,2 30/
  32  P_total Probabilidad aceptable de que todos los convoys puedan pasar por todas las rutas elegidas
  33  /0.3/
  34  coste_variable Coste variable por km recorrido /1/
  35  ;
  36   
  37  * Matrices de ejemplo generadas con la version buena de mi programa (la del 12-02-23)
  38  * [num_nodos, num_cut] = [10, 4]
  39  Table E(i,j) Existe la ruta de i a j
  40        0     1     2     3     4     5     6     7     8     9
  41  0     0     0     0     0     0     0     0     0     1     0
  42  1     0     0     0     0     0     0     0     0     1     0
  43  2     0     0     0     1     0     0     0     0     0     0
  44  3     0     0     1     0     0     1     1     0     0     0
  45  4     0     0     0     0     0     1     0     1     0     0
  46  5     0     0     0     1     1     0     0     0     1     1
  47  6     0     0     0     1     0     0     0     0     0     0
  48  7     0     0     0     0     1     0     0     0     0     0
  49  8     1     1     0     0     0     1     0     0     0     0
  50  9     0     0     0     0     0     1     0     0     0     0
  51  ;
  52  Table U(i,j) Al inicio es utilizable la ruta de i a j
  53        0     1     2     3     4     5     6     7     8     9
  54  0     0     0     0     0     0     0     0     0     1     0
  55  1     0     0     0     0     0     0     0     0     0     0
  56  2     0     0     0     1     0     0     0     0     0     0
  57  3     0     0     1     0     0     1     1     0     0     0
  58  4     0     0     0     0     0     0     0     1     0     0
  59  5     0     0     0     1     0     0     0     0     0     0
  60  6     0     0     0     1     0     0     0     0     0     0
  61  7     0     0     0     0     1     0     0     0     0     0
  62  8     1     0     0     0     0     0     0     0     0     0
  63  9     0     0     0     0     0     0     0     0     0     0
  64  ;
  65  Table P(i,j) Probabilidad de que la ruta de i a j sea usable
  66        0     1     2     3     4     5     6     7     8     9
  67  0     1     1     1     1     1     1     1     1     0.55  1
  68  1     1     1     1     1     1     1     1     1     1     1
  69  2     1     1     1     0.97  1     1     1     1     1     1
  70  3     1     1     0.97  1     1     0.95  0.77  1     1     1
  71  4     1     1     1     1     1     1     1     0.93  1     1
  72  5     1     1     1     0.95  1     1     1     1     1     1
  73  6     1     1     1     0.77  1     1     1     1     1     1
  74  7     1     1     1     1     0.93  1     1     1     1     1
  75  8     0.55  1     1     1     1     1     1     1     1     1
  76  9     1     1     1     1     1     1     1     1     1     1
  77  ;
  78  Table Dist(i,j) Distancia de las rutas de i a j
  79        0     1     2     3     4     5     6     7     8     9
  80  0     0     0     0     0     0     0     0     0     3     0
  81  1     0     0     0     0     0     0     0     0     0     0
  82  2     0     0     0     2     0     0     0     0     0     0
  83  3     0     0     2     0     0     5     3     0     0     0
  84  4     0     0     0     0     0     0     0     4     0     0
  85  5     0     0     0     5     0     0     0     0     0     0
  86  6     0     0     0     3     0     0     0     0     0     0
  87  7     0     0     0     0     4     0     0     0     0     0
  88  8     3     0     0     0     0     0     0     0     0     0
  89  9     0     0     0     0     0     0     0     0     0     0
  90  ;
  91   
  92   
  93   
  94  loop(i,
  95      loop(j,
  96          P(i, j) := log2(P(i,j));
  97          );
  98      );
  99   
 100  P_total = log2(P_total);
 101   
 102  Variables
 103  X(i,j,t,v)  Vehiculos de tipo v que van de i a j en el periodo t
 104   
 105  Y(j,t,v) Vehiculos de tipo v que hay en j en el periodo t. Pueden seguir su ruta o bien quedarse en j para proseguir su ruta en otro periodo o bien permanecer en j hasta el final del ultimo periodo
 106   
 107  Z(j,v) Vehiculos de tipo v totales emplazados en j al final del ultimo periodo. se asume que en ese momento hacen el reparto a j
 108   
 109  Z_(j) Ayuda total repartida a j
 110   
 111  auxZ(j) Variable binaria que representa si se reparte al menos un vehiculo de recurso a j
 112   
 113  H(i,j) variable binaria que determina si habilitamos el puente de i a j
 114   
 115  Coste Coste total del proyecto
 116   
 117  Used(i,j)
 118   
 119  Ayuda Total demanda satisfecha
 120  Eq Criterio de equidad. Numero de nodos a los que se reparte al menos un vehiculo
 121  ;
 122   
 123  Integer variables X, Y, Z;
 124  Binary variables auxZ, H, Used;
 125   
 126  Equations
 127   
 128  definir_Y(j,t,v) Restriccion de almacenamiento. En cierto nodo permanece lo almacenado en el anterior periodo mas lo que entra a el en el presente menos lo que sale
 129   
 130  definir_Z(j,v) Determina lo repartido como lo ubicado en cierto nodo en el ultimo periodo
 131   
 132  definir_Z_(j) Lo repartido a j en toneladas
 133   
 134  definir_auxZ(j)
 135   
 136  lim_salida(j,t,v) Limita los vehiculos que pueden salir de un nodo a las almacenados en el mismo
 137  flujo_ini(j,v) No hay almacenado nada en ningun nodo no inicial
 138  flujo_ini_0 En el nodo inicial esta almacenada la totalidad de los camiones
 139   
 140  existencia_ruta(i,j,t,v)
 141  usabilidad_ruta(i,j,t,v)
 142  orientacion(i,j) Si se habilita un sentido se ha de habilitar el opuesto
 143  lim_puentes Limite de puentes que podemos reconstruir
 144   
 145  lim_demanda(j) No se puede superar la demanda
 146   
 147  arco_usado(i,j) Pasa algun vehiculo por este nodo
 148  arco_usado_orientacion(i,j)
 149  fiabilidad Restriccion que impide elegir alguna ruta que tenga mas de cierta probabilidad de no ser usable
 150   
 151  f_ayuda Funcion objetivo 1. Cantidad total del recurso repartida en cierta unidad
 152  f_equidad Funcion objetivo 2.  Criterio de equidad. Numero de nodos a los que se les reparte al menos una unidad de recurso
 153  ;
 154   
 155  definir_Y(j,t,v)$(ord(t)>1).. Y(j,t,v) =E=
 156                              Y(j,t-1,v) + sum(i, X(i,j,t,v)) - sum(i, X(j,i,t,v));
 157  definir_Z(j,v).. Z(j,v) =E= Y(j,"3",v);
 158  definir_Z_(j).. Z_(j) =E= sum(v, Z(j,v)*capacidad_vehiculo(v));
 159  definir_auxZ(j).. auxZ(j) =L= Z_(j);
 160   
 161  lim_salida(j,t,v).. sum(i,X(j,i,t,v)) =L= Y(j,t-1,v);
 162  flujo_ini(j,v)$(ord(j)>1).. Y(j,"0",v) =E= 0;
 163  flujo_ini_0.. sum(v,Y("0","0",v)*coste_vehiculo(v)) + sum(i, sum(j, sum(t, sum(v, X(i,j,t,v)*Dist(i,j)*coste_variable)))) =L= max_coste;
 164  existencia_ruta(i,j,t,v).. X(i,j,t,v) =L= 99*E(i,j);
 165  usabilidad_ruta(i,j,t,v).. X(i,j,t,v) =L= 99*(U(i,j) +  H(i,j));
 166  orientacion(i,j).. H(i,j) =E= H(j,i);
 167  lim_puentes..  sum(i, sum(j, H(i,j))) =L= max_puentes;
 168   
 169  lim_demanda(j).. Z_(j) =L= dem(j);
 170   
 171  arco_usado(i,j).. 99*Used(i,j) =G= sum(t, sum(v, X(i,j,t,v)));
 172  arco_usado_orientacion(i,j).. Used(i,j)=E= Used(j,i);
 173  fiabilidad.. sum(i, sum(j, Used(i,j)*(P(i,j)))) =G= P_total;
 174   
 175  f_ayuda.. Ayuda =E= sum(j, Z_(j)-dem(j));
 176  f_equidad.. Eq =E= sum(j, auxZ(j));
 177  ;
 178   
 179  display P;
 180   
 181  model modelo1 /all/;
 182   
 183  solve modelo1 using MIP maximizing Ayuda
 184  ;
 185  solve modelo1 using MIP maximizing Eq
 186  ;
 187   
 188  *
 189   
 190   
 191  *con 2 tipos de vehiculos
 192  *---   1,647 rows  863 columns  4,237 non-zeroes
 193  *---   854 discrete-columns
 194  *utiliza vehiculos y puentes distintos (los de menor capacidad para mayor equidad)
 195   
 196  *con 3 tipos de vehiculos:
 197  *---   2,437 rows  1,262 columns  6,267 non-zeroes
 198  *---   1,253 discrete-columns
 199  *The model exceeds the demo license limits for linear models of more than 2000 rows or columns
 200   
 201   


COMPILATION TIME     =        0.078 SECONDS      3 MB  41.2.0 5110e5ff WEX-WEI


USER: GAMS Demo license for Antonio Sevilla Sastre   G221121|0002CO-GEN
      UCM, Spain                                               DL079880


**** FILE SUMMARY

Input      G:\Mi unidad\5. TFG\src\gams\M-Rvfc.gms
Output     G:\Mi unidad\5. TFG\src\gams\M-Rvfc.lst
