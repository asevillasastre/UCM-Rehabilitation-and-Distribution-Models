GAMS 41.2.0  5110e5ff Nov 14, 2022          WEX-WEI x86 64bit/MS Windows - 01/21/23 13:16:53 Page 1
modelo sencillo reconstruccion + reparto 1
C o m p i l a t i o n


   2   
   3  Set
   4  j Nodos. Representan los asentamientos. /0*6/
   5  t Periodos. Se asumen de misma duracion ademas de que todos los arcos se pueden recorrer en uno de estos periodos
   6   /0*6/
   7  v Tipos de vehiculo /0*1/
   8  ;
   9   
  10  Alias
  11  (j,i,k)
  12  ;
  13   
  14  Parameters
  15  dem(j) Demanda por cada asentamiento de un  unico recurso en toneladas
  16                          /0 0,
  17                           1 1,
  18                           2 1,
  19                           3 1,
  20                           4 8,
  21                           5 4,
  22                           6 4/
  23  max_coste Maximo presupuesto que se puede invertir
  24   /45/
  25  max_puentes Maximo numero de puentes que podemos reconstruir previo paso (un puente por cada sentido consideramos un grafo orientado)
  26   /2/
  27  capacidad_vehiculo(v) Capacidad de hacer partir 1 vehiculo de tipo v /0 1,1 2/
  28  coste_vehiculo(v) Coste total y fijo de hacer partir 1 vehiculo de tipo v /0 10,1 15/
  29  ;
  30   
  31  Table E(i,j) Existe la ruta de i a j
  32      0   1   2   3   4   5   6
  33  0   0   1   1   1   0   1   0
  34  1   1   0   0   0   0   0   0
  35  2   1   0   0   0   0   0   0
  36  3   1   0   0   0   1   0   0
  37  4   0   0   0   1   0   0   0
  38  5   1   0   0   0   0   0   1
  39  6   0   0   0   0   0   1   0
  40  ;
  41   
  42  Table U(i,j) Al inicio es utilizable la ruta de i a j
  43      0   1   2   3   4   5   6
  44  0   0   1   0   1   0   0   0
  45  1   1   0   0   0   0   0   0
  46  2   0   0   0   0   0   0   0
  47  3   1   0   0   0   0   0   0
  48  4   0   0   0   0   0   0   0
  49  5   0   0   0   0   0   0   1
  50  6   0   0   0   0   0   1   0
  51  ;
  52   
  53  Variables
  54  X(i,j,t,v)  Vehiculos de tipo v que van de i a j en el periodo t
  55   
  56  Y(j,t,v) Vehiculos de tipo v que hay en j en el periodo t. Pueden seguir su ruta o bien quedarse en j para proseguir su ruta en otro periodo o bien permanecer en j hasta el final del ultimo periodo
  57   
  58  Z(j,v) Vehiculos de tipo v totales emplazados en j al final del ultimo periodo. se asume que en ese momento hacen el reparto a j
  59   
  60  Z_(j) Ayuda total repartida a j
  61   
  62  auxZ(j) Variable binaria que representa si se reparte al menos un vehiculo de recurso a j
  63   
  64   
  65  H(i,j) variable binaria que determina si habilitamos el puente de i a j
  66   
  67  Coste Coste total del proyecto
  68   
  69  Ayuda Total demanda satisfecha
  70  Eq Criterio de equidad. Numero de nodos a los que se reparte al menos un vehiculo
  71  ;
  72   
  73  Integer variables X, Y, Z;
  74  Binary variables auxZ, H;
  75   
  76  Equations
  77   
  78  definir_Y(j,t,v) Restriccion de almacenamiento. Rn cierto nodo permanece lo almacenado en el anterior periodo mas lo que entra a el en el presente menos lo que sale
  79   
  80  definir_Z(j,v) Determina lo repartido como lo ubicado en cierto nodo en el ultimo periodo
  81   
  82  definir_Z_(j) Lo repartido a j en toneladas
  83   
  84  definir_auxZ(j)
  85   
  86   
  87  lim_salida(j,t,v) Limita los vehiculos que pueden salir de un nodo a las almacenados en el mismo
  88  flujo_ini(j,v) No hay almacenado nada en ningun nodo no inicial
  89  flujo_ini_0 En el nodo inicial esta almacenada la totalidad de los camiones
  90   
  91  existencia_ruta(i,j,t,v)
  92  usabilidad_ruta(i,j,t,v)
  93  orientacion(i,j) Si se habilita un sentido se ha de habilitar el opuesto
  94  lim_puentes Limite de puentes que podemos reconstruir
  95   
  96  lim_demanda(j) No se puede superar la demanda
  97   
  98  f_ayuda Funcion objetivo 1. Cantidad total del recurso repartida en cierta unidad
  99  f_equidad Funcion objetivo 2.  Criterio de equidad. Numero de nodos a los que se les reparte al menos una unidad de recurso
 100  ;
 101   
 102  definir_Y(j,t,v)$(ord(t)>1).. Y(j,t,v) =E=
 103                              Y(j,t-1,v) + sum(i, X(i,j,t,v)) - sum(i, X(j,i,t,v));
 104  definir_Z(j,v).. Z(j,v) =E= Y(j,"3",v);
 105  definir_Z_(j).. Z_(j) =E= sum(v, Z(j,v)*capacidad_vehiculo(v));
 106  definir_auxZ(j).. auxZ(j) =L= Z_(j);
 107   
 108  lim_salida(j,t,v).. sum(i,X(j,i,t,v)) =L= Y(j,t-1,v);
 109  flujo_ini(j,v)$(ord(j)>1).. Y(j,"0",v) =E= 0;
 110  flujo_ini_0.. sum(v,Y("0","0",v)*coste_vehiculo(v)) =L= max_coste;
 111  existencia_ruta(i,j,t,v).. X(i,j,t,v) =L= 99*E(i,j);
 112  usabilidad_ruta(i,j,t,v).. X(i,j,t,v) =L= 99*(U(i,j) +  H(i,j));
 113  orientacion(i,j).. H(i,j) =E= H(j,i);
 114  lim_puentes..  sum(i, sum(j, H(i,j))) =L= max_puentes;
 115   
 116  lim_demanda(j).. Z_(j) =L= dem(j);
 117   
 118  f_ayuda.. Ayuda =E= sum(j, Z_(j)-dem(j));
 119  f_equidad.. Eq =E= sum(j, auxZ(j));
 120  ;
 121   
 122  model modelo1 /all/;
 123   
 124  solve modelo1 using MIP maximizing Ayuda
 125  ;
 126  solve modelo1 using MIP maximizing Eq
 127  ;
 128   
 129   
 130  *con 2 tipos de vehiculos
 131  *---   1,647 rows  863 columns  4,237 non-zeroes
 132  *---   854 discrete-columns
 133  *utiliza vehiculos y puentes distintos (los de menor capacidad para mayor equidad)
 134   
 135  *con 3 tipos de vehiculos:
 136  *---   2,437 rows  1,262 columns  6,267 non-zeroes
 137  *---   1,253 discrete-columns
 138  *The model exceeds the demo license limits for linear models of more than 2000 rows or columns
 139   
 140   


COMPILATION TIME     =        0.032 SECONDS      3 MB  41.2.0 5110e5ff WEX-WEI


USER: GAMS Demo license for Antonio Sevilla Sastre   G221121|0002CO-GEN
      UCM, Spain                                               DL079880


**** FILE SUMMARY

Input      G:\Mi unidad\TFG\src\modelo_ijt_vehiculos.gms
Output     G:\Mi unidad\TFG\src\modelo_ijt_vehiculos.lst
