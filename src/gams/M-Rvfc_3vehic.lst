GAMS 41.2.0  5110e5ff Nov 14, 2022          WEX-WEI x86 64bit/MS Windows - 02/06/23 18:02:24 Page 1
modelo sencillo reconstruccion + reparto 1
C o m p i l a t i o n


   2   
   3  Set
   4  j Nodos. Representan los asentamientos. /0*6/
   5  t Periodos. Se asumen de misma duracion ademas de que todos los arcos se pueden recorrer en uno de estos periodos
   6   /0*6/
   7  v Tipos de vehiculo /0*2/
   8  ;
   9   
  10  Alias
  11  (j,i,k)
  12  ;
  13   
  14  Parameters
  15  dem(j) Demanda por cada asentamiento de un  unico recurso en toneladas
  16                          /0 0,
  17                           1 1,
  18                           2 1,
  19                           3 1,
  20                           4 8,
  21                           5 4,
  22                           6 4/
  23  max_coste Maximo presupuesto que se puede invertir
  24   /70/
  25  max_puentes Maximo numero de puentes que podemos reconstruir previo paso (un puente por cada sentido consideramos un grafo orientado)
  26   /2/
  27  capacidad_vehiculo(v) Capacidad de hacer partir 1 vehiculo de tipo v /0 1,1 2,2 5/
  28  coste_vehiculo(v) Coste total y fijo de hacer partir 1 vehiculo de tipo v /0 10,1 15,2 30/
  29  P_total Probabilidad aceptable de que todos los convoys puedan pasar por todas las rutas elegidas
  30  /0.3/
  31  coste_variable Coste variable por km recorrido /1/
  32  ;
  33   
  34  Table E(i,j) Existe la ruta de i a j
  35      0   1   2   3   4   5   6
  36  0   0   1   1   1   0   1   0
  37  1   1   0   0   0   0   0   0
  38  2   1   0   0   0   0   0   0
  39  3   1   0   0   0   1   0   0
  40  4   0   0   0   1   0   0   0
  41  5   1   0   0   0   0   0   1
  42  6   0   0   0   0   0   1   0
  43  ;
  44   
  45  Table U(i,j) Al inicio es utilizable la ruta de i a j
  46      0   1   2   3   4   5   6
  47  0   0   1   0   1   0   0   0
  48  1   1   0   0   0   0   0   0
  49  2   0   0   0   0   0   0   0
  50  3   1   0   0   0   0   0   0
  51  4   0   0   0   0   0   0   0
  52  5   0   0   0   0   0   0   1
  53  6   0   0   0   0   0   1   0
  54  ;
  55   
  56  Table P(i,j) Probabilidad de que la ruta de i a j sea usable
  57      0   1   2   3   4   5   6
  58  0   1   0.9 0.5 0.3 1   0.7 1
  59  1   0.9 1   1   1   1   1   1
  60  2   0.5 1   1   1   1   1   1
  61  3   0.3 1   1   1   0.4 1   1
  62  4   1   1   1   0.4 1   1   1
  63  5   0.7 1   1   1   1   1   0.6
  64  6   1   1   1   1   1   0.6 1
  65  ;
  66   
  67  Table Dist(i,j) Distancia de las rutas de i a j
  68      0   1   2   3   4   5   6
  69  0   0   1   2   4   0   1   0
  70  1   1   0   0   0   0   0   0
  71  2   2   0   0   0   0   0   0
  72  3   4   0   0   0   7   0   0
  73  4   0   0   0   7   0   0   0
  74  5   1   0   0   0   0   0   3
  75  6   0   0   0   0   0   3   0
  76   
  77  loop(i,
  78      loop(j,
  79          P(i, j) := log2(P(i,j));
  80          );
  81      );
  82   
  83  P_total = log2(P_total);
  84   
  85  Variables
  86  X(i,j,t,v)  Vehiculos de tipo v que van de i a j en el periodo t
  87   
  88  Y(j,t,v) Vehiculos de tipo v que hay en j en el periodo t. Pueden seguir su ruta o bien quedarse en j para proseguir su ruta en otro periodo o bien permanecer en j hasta el final del ultimo periodo
  89   
  90  Z(j,v) Vehiculos de tipo v totales emplazados en j al final del ultimo periodo. se asume que en ese momento hacen el reparto a j
  91   
  92  Z_(j) Ayuda total repartida a j
  93   
  94  auxZ(j) Variable binaria que representa si se reparte al menos un vehiculo de recurso a j
  95   
  96  H(i,j) variable binaria que determina si habilitamos el puente de i a j
  97   
  98  Coste Coste total del proyecto
  99   
 100  Used(i,j)
 101   
 102  Ayuda Total demanda satisfecha
 103  Eq Criterio de equidad. Numero de nodos a los que se reparte al menos un vehiculo
 104  ;
 105   
 106  Integer variables X, Y, Z;
 107  Binary variables auxZ, H, Used;
 108   
 109  Equations
 110   
 111  definir_Y(j,t,v) Restriccion de almacenamiento. En cierto nodo permanece lo almacenado en el anterior periodo mas lo que entra a el en el presente menos lo que sale
 112   
 113  definir_Z(j,v) Determina lo repartido como lo ubicado en cierto nodo en el ultimo periodo
 114   
 115  definir_Z_(j) Lo repartido a j en toneladas
 116   
 117  definir_auxZ(j)
 118   
 119  lim_salida(j,t,v) Limita los vehiculos que pueden salir de un nodo a las almacenados en el mismo
 120  flujo_ini(j,v) No hay almacenado nada en ningun nodo no inicial
 121  flujo_ini_0 En el nodo inicial esta almacenada la totalidad de los camiones
 122   
 123  existencia_ruta(i,j,t,v)
 124  usabilidad_ruta(i,j,t,v)
 125  orientacion(i,j) Si se habilita un sentido se ha de habilitar el opuesto
 126  lim_puentes Limite de puentes que podemos reconstruir
 127   
 128  lim_demanda(j) No se puede superar la demanda
 129   
 130  arco_usado(i,j) Pasa algun vehiculo por este nodo
 131  arco_usado_orientacion(i,j)
 132  fiabilidad Restriccion que impide elegir alguna ruta que tenga mas de cierta probabilidad de no ser usable
 133   
 134  f_ayuda Funcion objetivo 1. Cantidad total del recurso repartida en cierta unidad
 135  f_equidad Funcion objetivo 2.  Criterio de equidad. Numero de nodos a los que se les reparte al menos una unidad de recurso
 136  ;
 137   
 138  definir_Y(j,t,v)$(ord(t)>1).. Y(j,t,v) =E=
 139                              Y(j,t-1,v) + sum(i, X(i,j,t,v)) - sum(i, X(j,i,t,v));
 140  definir_Z(j,v).. Z(j,v) =E= Y(j,"3",v);
 141  definir_Z_(j).. Z_(j) =E= sum(v, Z(j,v)*capacidad_vehiculo(v));
 142  definir_auxZ(j).. auxZ(j) =L= Z_(j);
 143   
 144  lim_salida(j,t,v).. sum(i,X(j,i,t,v)) =L= Y(j,t-1,v);
 145  flujo_ini(j,v)$(ord(j)>1).. Y(j,"0",v) =E= 0;
 146  flujo_ini_0.. sum(v,Y("0","0",v)*coste_vehiculo(v)) + sum(i, sum(j, sum(t, sum(v, X(i,j,t,v)*Dist(i,j)*coste_variable)))) =L= max_coste;
 147  existencia_ruta(i,j,t,v).. X(i,j,t,v) =L= 99*E(i,j);
 148  usabilidad_ruta(i,j,t,v).. X(i,j,t,v) =L= 99*(U(i,j) +  H(i,j));
 149  orientacion(i,j).. H(i,j) =E= H(j,i);
 150  lim_puentes..  sum(i, sum(j, H(i,j))) =L= max_puentes;
 151   
 152  lim_demanda(j).. Z_(j) =L= dem(j);
 153   
 154  arco_usado(i,j).. 99*Used(i,j) =G= sum(t, sum(v, X(i,j,t,v)));
 155  arco_usado_orientacion(i,j).. Used(i,j)=E= Used(j,i);
 156  fiabilidad.. sum(i, sum(j, Used(i,j)*(P(i,j)))) =G= P_total;
 157   
 158  f_ayuda.. Ayuda =E= sum(j, Z_(j)-dem(j));
 159  f_equidad.. Eq =E= sum(j, auxZ(j));
 160  ;
 161   
 162  display P;
 163   
 164  model modelo1 /all/;
 165   
 166  solve modelo1 using MIP maximizing Ayuda
 167  ;
 168  solve modelo1 using MIP maximizing Eq
 169  ;
 170   
 171  *
 172   
 173   
 174  *con 2 tipos de vehiculos
 175  *---   1,647 rows  863 columns  4,237 non-zeroes
 176  *---   854 discrete-columns
 177  *utiliza vehiculos y puentes distintos (los de menor capacidad para mayor equidad)
 178   
 179  *con 3 tipos de vehiculos:
 180  *---   2,437 rows  1,262 columns  6,267 non-zeroes
 181  *---   1,253 discrete-columns
 182  *The model exceeds the demo license limits for linear models of more than 2000 rows or columns
 183   
 184   


COMPILATION TIME     =        0.000 SECONDS      3 MB  41.2.0 5110e5ff WEX-WEI
GAMS 41.2.0  5110e5ff Nov 14, 2022          WEX-WEI x86 64bit/MS Windows - 02/06/23 18:02:24 Page 2
modelo sencillo reconstruccion + reparto 1
E x e c u t i o n


----    162 PARAMETER P  Probabilidad de que la ruta de i a j sea usable

            0           1           2           3           4           5           6

0                  -0.152      -1.000      -1.737                  -0.515
1      -0.152
2      -1.000
3      -1.737                                          -1.322
4                                          -1.322
5      -0.515                                                                  -0.737
6                                                                  -0.737

GAMS 41.2.0  5110e5ff Nov 14, 2022          WEX-WEI x86 64bit/MS Windows - 02/06/23 18:02:24 Page 3
modelo sencillo reconstruccion + reparto 1
Equation Listing    SOLVE modelo1 Using MIP From line 167


---- definir_Y  =E=  Restriccion de almacenamiento. En cierto nodo permanece lo almacenado en el anterior periodo mas lo que entra a el en el presente menos lo que sale

definir_Y(0,1,0)..  X(0,1,1,0) + X(0,2,1,0) + X(0,3,1,0) + X(0,4,1,0) + X(0,5,1,0) + X(0,6,1,0) - X(1,0,1,0) - X(2,0,1,0) - X(3,0,1,0) - X(4,0,1,0) - X(5,0,1,0) - X(6,0,1,0) - Y(0,0,0) + Y(0,1,0) =E= 0 ; (LHS = 0)
     
definir_Y(0,1,1)..  X(0,1,1,1) + X(0,2,1,1) + X(0,3,1,1) + X(0,4,1,1) + X(0,5,1,1) + X(0,6,1,1) - X(1,0,1,1) - X(2,0,1,1) - X(3,0,1,1) - X(4,0,1,1) - X(5,0,1,1) - X(6,0,1,1) - Y(0,0,1) + Y(0,1,1) =E= 0 ; (LHS = 0)
     
definir_Y(0,1,2)..  X(0,1,1,2) + X(0,2,1,2) + X(0,3,1,2) + X(0,4,1,2) + X(0,5,1,2) + X(0,6,1,2) - X(1,0,1,2) - X(2,0,1,2) - X(3,0,1,2) - X(4,0,1,2) - X(5,0,1,2) - X(6,0,1,2) - Y(0,0,2) + Y(0,1,2) =E= 0 ; (LHS = 0)
     
REMAINING 123 ENTRIES SKIPPED


---- definir_Z  =E=  Determina lo repartido como lo ubicado en cierto nodo en el ultimo periodo

definir_Z(0,0)..  - Y(0,3,0) + Z(0,0) =E= 0 ; (LHS = 0)
     
definir_Z(0,1)..  - Y(0,3,1) + Z(0,1) =E= 0 ; (LHS = 0)
     
definir_Z(0,2)..  - Y(0,3,2) + Z(0,2) =E= 0 ; (LHS = 0)
     
REMAINING 18 ENTRIES SKIPPED


---- definir_Z_  =E=  Lo repartido a j en toneladas

definir_Z_(0)..  - Z(0,0) - 2*Z(0,1) - 5*Z(0,2) + Z_(0) =E= 0 ; (LHS = 0)
     
definir_Z_(1)..  - Z(1,0) - 2*Z(1,1) - 5*Z(1,2) + Z_(1) =E= 0 ; (LHS = 0)
     
definir_Z_(2)..  - Z(2,0) - 2*Z(2,1) - 5*Z(2,2) + Z_(2) =E= 0 ; (LHS = 0)
     
REMAINING 4 ENTRIES SKIPPED


---- definir_auxZ  =L=  

definir_auxZ(0)..  - Z_(0) + auxZ(0) =L= 0 ; (LHS = 0)
     
definir_auxZ(1)..  - Z_(1) + auxZ(1) =L= 0 ; (LHS = 0)
     
definir_auxZ(2)..  - Z_(2) + auxZ(2) =L= 0 ; (LHS = 0)
     
REMAINING 4 ENTRIES SKIPPED


---- lim_salida  =L=  Limita los vehiculos que pueden salir de un nodo a las almacenados en el mismo

lim_salida(0,0,0)..  X(0,0,0,0) + X(0,1,0,0) + X(0,2,0,0) + X(0,3,0,0) + X(0,4,0,0) + X(0,5,0,0) + X(0,6,0,0) =L= 0 ; (LHS = 0)
     
lim_salida(0,0,1)..  X(0,0,0,1) + X(0,1,0,1) + X(0,2,0,1) + X(0,3,0,1) + X(0,4,0,1) + X(0,5,0,1) + X(0,6,0,1) =L= 0 ; (LHS = 0)
     
lim_salida(0,0,2)..  X(0,0,0,2) + X(0,1,0,2) + X(0,2,0,2) + X(0,3,0,2) + X(0,4,0,2) + X(0,5,0,2) + X(0,6,0,2) =L= 0 ; (LHS = 0)
     
REMAINING 144 ENTRIES SKIPPED


---- flujo_ini  =E=  No hay almacenado nada en ningun nodo no inicial

flujo_ini(1,0)..  Y(1,0,0) =E= 0 ; (LHS = 0)
     
flujo_ini(1,1)..  Y(1,0,1) =E= 0 ; (LHS = 0)
     
flujo_ini(1,2)..  Y(1,0,2) =E= 0 ; (LHS = 0)
     
REMAINING 15 ENTRIES SKIPPED


---- flujo_ini_0  =L=  En el nodo inicial esta almacenada la totalidad de los camiones

flujo_ini_0..  X(0,1,0,0) + X(0,1,0,1) + X(0,1,0,2) + X(0,1,1,0) + X(0,1,1,1) + X(0,1,1,2) + X(0,1,2,0) + X(0,1,2,1) + X(0,1,2,2) + X(0,1,3,0) + X(0,1,3,1) + X(0,1,3,2) + X(0,1,4,0) + X(0,1,4,1) + X(0,1,4,2) + X(0,1,5,0) + X(0,1,5,1) + X(0,1,5,2) + X(0,1,6,0) + X(0,1,6,1) + X(0,1,6,2) + 2*X(0,2,0,0) + 2*X(0,2,0,1) + 2*X(0,2,0,2) + 2*X(0,2,1,0) + 2*X(0,2,1,1) + 2*X(0,2,1,2) + 2*X(0,2,2,0) + 2*X(0,2,2,1) + 2*X(0,2,2,2) + 2*X(0,2,3,0) + 2*X(0,2,3,1) + 2*X(0,2,3,2) + 2*X(0,2,4,0) + 2*X(0,2,4,1) + 2*X(0,2,4,2) + 2*X(0,2,5,0) + 2*X(0,2,5,1) + 2*X(0,2,5,2) + 2*X(0,2,6,0) + 2*X(0,2,6,1) + 2*X(0,2,6,2) + 4*X(0,3,0,0) + 4*X(0,3,0,1) + 4*X(0,3,0,2) + 4*X(0,3,1,0) + 4*X(0,3,1,1) + 4*X(0,3,1,2) + 4*X(0,3,2,0) + 4*X(0,3,2,1) + 4*X(0,3,2,2) + 4*X(0,3,3,0) + 4*X(0,3,3,1) + 4*X(0,3,3,2) + 4*X(0,3,4,0) + 4*X(0,3,4,1) + 4*X(0,3,4,2) + 4*X(0,3,5,0) + 4*X(0,3,5,1) + 4*X(0,3,5,2) + 4*X(0,3,6,0) + 4*X(0,3,6,1) + 4*X(0,3,6,2) + X(0,5,0,0) + X(0,5,0,1) + X(0,5,0,2) + X(0,5,1,0) + X(0,5,1,1) + X(0,5,1,2) + X(0,5,2,0) + X(0,5,2,1) + X(0,5,2,2) + X(0,5,3,0) + X(0,5,3,1) + X(0,5,3,2) + X(0,5,4,0) + X(0,5,4,1) + X(0,5,4,2) + X(0,5,5,0) + X(0,5,5,1) + X(0,5,5,2) + X(0,5,6,0) + X(0,5,6,1) + X(0,5,6,2) + X(1,0,0,0) + X(1,0,0,1) + X(1,0,0,2) + X(1,0,1,0) + X(1,0,1,1) + X(1,0,1,2) + X(1,0,2,0) + X(1,0,2,1) + X(1,0,2,2) + X(1,0,3,0) + X(1,0,3,1) + X(1,0,3,2) + X(1,0,4,0) + X(1,0,4,1) + X(1,0,4,2) + X(1,0,5,0) + X(1,0,5,1) + X(1,0,5,2) + X(1,0,6,0) + X(1,0,6,1) + X(1,0,6,2) + 2*X(2,0,0,0) + 2*X(2,0,0,1) + 2*X(2,0,0,2) + 2*X(2,0,1,0) + 2*X(2,0,1,1) + 2*X(2,0,1,2) + 2*X(2,0,2,0) + 2*X(2,0,2,1) + 2*X(2,0,2,2) + 2*X(2,0,3,0) + 2*X(2,0,3,1) + 2*X(2,0,3,2) + 2*X(2,0,4,0) + 2*X(2,0,4,1) + 2*X(2,0,4,2) + 2*X(2,0,5,0) + 2*X(2,0,5,1) + 2*X(2,0,5,2) + 2*X(2,0,6,0) + 2*X(2,0,6,1) + 2*X(2,0,6,2) + 4*X(3,0,0,0) + 4*X(3,0,0,1) + 4*X(3,0,0,2) + 4*X(3,0,1,0) + 4*X(3,0,1,1) + 4*X(3,0,1,2) + 4*X(3,0,2,0) + 4*X(3,0,2,1) + 4*X(3,0,2,2) + 4*X(3,0,3,0) + 4*X(3,0,3,1) + 4*X(3,0,3,2) + 4*X(3,0,4,0) + 4*X(3,0,4,1) + 4*X(3,0,4,2) + 4*X(3,0,5,0) + 4*X(3,0,5,1) + 4*X(3,0,5,2) + 4*X(3,0,6,0) + 4*X(3,0,6,1) + 4*X(3,0,6,2) + 7*X(3,4,0,0) + 7*X(3,4,0,1) + 7*X(3,4,0,2) + 7*X(3,4,1,0) + 7*X(3,4,1,1) + 7*X(3,4,1,2) + 7*X(3,4,2,0) + 7*X(3,4,2,1) + 7*X(3,4,2,2) + 7*X(3,4,3,0) + 7*X(3,4,3,1) + 7*X(3,4,3,2) + 7*X(3,4,4,0) + 7*X(3,4,4,1) + 7*X(3,4,4,2) + 7*X(3,4,5,0) + 7*X(3,4,5,1) + 7*X(3,4,5,2) + 7*X(3,4,6,0) + 7*X(3,4,6,1) + 7*X(3,4,6,2) + 7*X(4,3,0,0) + 7*X(4,3,0,1) + 7*X(4,3,0,2) + 7*X(4,3,1,0) + 7*X(4,3,1,1) + 7*X(4,3,1,2) + 7*X(4,3,2,0) + 7*X(4,3,2,1) + 7*X(4,3,2,2) + 7*X(4,3,3,0) + 7*X(4,3,3,1) + 7*X(4,3,3,2) + 7*X(4,3,4,0) + 7*X(4,3,4,1) + 7*X(4,3,4,2) + 7*X(4,3,5,0) + 7*X(4,3,5,1) + 7*X(4,3,5,2) + 7*X(4,3,6,0) + 7*X(4,3,6,1) + 7*X(4,3,6,2) + X(5,0,0,0) + X(5,0,0,1) + X(5,0,0,2) + X(5,0,1,0) + X(5,0,1,1) + X(5,0,1,2) + X(5,0,2,0) + X(5,0,2,1) + X(5,0,2,2) + X(5,0,3,0) + X(5,0,3,1) + X(5,0,3,2) + X(5,0,4,0) + X(5,0,4,1) + X(5,0,4,2) + X(5,0,5,0) + X(5,0,5,1) + X(5,0,5,2) + X(5,0,6,0) + X(5,0,6,1) + X(5,0,6,2) + 3*X(5,6,0,0) + 3*X(5,6,0,1) + 3*X(5,6,0,2) + 3*X(5,6,1,0) + 3*X(5,6,1,1) + 3*X(5,6,1,2) + 3*X(5,6,2,0) + 3*X(5,6,2,1) + 3*X(5,6,2,2) + 3*X(5,6,3,0) + 3*X(5,6,3,1) + 3*X(5,6,3,2) + 3*X(5,6,4,0) + 3*X(5,6,4,1) + 3*X(5,6,4,2) + 3*X(5,6,5,0) + 3*X(5,6,5,1) + 3*X(5,6,5,2) + 3*X(5,6,6,0) + 3*X(5,6,6,1) + 3*X(5,6,6,2) + 3*X(6,5,0,0) + 3*X(6,5,0,1) + 3*X(6,5,0,2) + 3*X(6,5,1,0) + 3*X(6,5,1,1) + 3*X(6,5,1,2) + 3*X(6,5,2,0) + 3*X(6,5,2,1) + 3*X(6,5,2,2) + 3*X(6,5,3,0) + 3*X(6,5,3,1) + 3*X(6,5,3,2) + 3*X(6,5,4,0) + 3*X(6,5,4,1) + 3*X(6,5,4,2) + 3*X(6,5,5,0) + 3*X(6,5,5,1) + 3*X(6,5,5,2) + 3*X(6,5,6,0) + 3*X(6,5,6,1) + 3*X(6,5,6,2) + 10*Y(0,0,0) + 15*Y(0,0,1) + 30*Y(0,0,2) =L= 70 ; (LHS = 0)
     

---- existencia_ruta  =L=  

existencia_ruta(0,0,0,0)..  X(0,0,0,0) =L= 0 ; (LHS = 0)
     
existencia_ruta(0,0,0,1)..  X(0,0,0,1) =L= 0 ; (LHS = 0)
     
existencia_ruta(0,0,0,2)..  X(0,0,0,2) =L= 0 ; (LHS = 0)
     
REMAINING 1026 ENTRIES SKIPPED


---- usabilidad_ruta  =L=  

usabilidad_ruta(0,0,0,0)..  X(0,0,0,0) - 99*H(0,0) =L= 0 ; (LHS = 0)
     
usabilidad_ruta(0,0,0,1)..  X(0,0,0,1) - 99*H(0,0) =L= 0 ; (LHS = 0)
     
usabilidad_ruta(0,0,0,2)..  X(0,0,0,2) - 99*H(0,0) =L= 0 ; (LHS = 0)
     
REMAINING 1026 ENTRIES SKIPPED


---- orientacion  =E=  Si se habilita un sentido se ha de habilitar el opuesto

orientacion(0,1)..  H(0,1) - H(1,0) =E= 0 ; (LHS = 0)
     
orientacion(0,2)..  H(0,2) - H(2,0) =E= 0 ; (LHS = 0)
     
orientacion(0,3)..  H(0,3) - H(3,0) =E= 0 ; (LHS = 0)
     
REMAINING 39 ENTRIES SKIPPED


---- lim_puentes  =L=  Limite de puentes que podemos reconstruir

lim_puentes..  H(0,0) + H(0,1) + H(0,2) + H(0,3) + H(0,4) + H(0,5) + H(0,6) + H(1,0) + H(1,1) + H(1,2) + H(1,3) + H(1,4) + H(1,5) + H(1,6) + H(2,0) + H(2,1) + H(2,2) + H(2,3) + H(2,4) + H(2,5) + H(2,6) + H(3,0) + H(3,1) + H(3,2) + H(3,3) + H(3,4) + H(3,5) + H(3,6) + H(4,0) + H(4,1) + H(4,2) + H(4,3) + H(4,4) + H(4,5) + H(4,6) + H(5,0) + H(5,1) + H(5,2) + H(5,3) + H(5,4) + H(5,5) + H(5,6) + H(6,0) + H(6,1) + H(6,2) + H(6,3) + H(6,4) + H(6,5) + H(6,6) =L= 2 ; (LHS = 0)
     

---- lim_demanda  =L=  No se puede superar la demanda

lim_demanda(0)..  Z_(0) =L= 0 ; (LHS = 0)
     
lim_demanda(1)..  Z_(1) =L= 1 ; (LHS = 0)
     
lim_demanda(2)..  Z_(2) =L= 1 ; (LHS = 0)
     
REMAINING 4 ENTRIES SKIPPED


---- arco_usado  =G=  Pasa algun vehiculo por este nodo

arco_usado(0,0)..  - X(0,0,0,0) - X(0,0,0,1) - X(0,0,0,2) - X(0,0,1,0) - X(0,0,1,1) - X(0,0,1,2) - X(0,0,2,0) - X(0,0,2,1) - X(0,0,2,2) - X(0,0,3,0) - X(0,0,3,1) - X(0,0,3,2) - X(0,0,4,0) - X(0,0,4,1) - X(0,0,4,2) - X(0,0,5,0) - X(0,0,5,1) - X(0,0,5,2) - X(0,0,6,0) - X(0,0,6,1) - X(0,0,6,2) + 99*Used(0,0) =G= 0 ; (LHS = 0)
     
arco_usado(0,1)..  - X(0,1,0,0) - X(0,1,0,1) - X(0,1,0,2) - X(0,1,1,0) - X(0,1,1,1) - X(0,1,1,2) - X(0,1,2,0) - X(0,1,2,1) - X(0,1,2,2) - X(0,1,3,0) - X(0,1,3,1) - X(0,1,3,2) - X(0,1,4,0) - X(0,1,4,1) - X(0,1,4,2) - X(0,1,5,0) - X(0,1,5,1) - X(0,1,5,2) - X(0,1,6,0) - X(0,1,6,1) - X(0,1,6,2) + 99*Used(0,1) =G= 0 ; (LHS = 0)
     
arco_usado(0,2)..  - X(0,2,0,0) - X(0,2,0,1) - X(0,2,0,2) - X(0,2,1,0) - X(0,2,1,1) - X(0,2,1,2) - X(0,2,2,0) - X(0,2,2,1) - X(0,2,2,2) - X(0,2,3,0) - X(0,2,3,1) - X(0,2,3,2) - X(0,2,4,0) - X(0,2,4,1) - X(0,2,4,2) - X(0,2,5,0) - X(0,2,5,1) - X(0,2,5,2) - X(0,2,6,0) - X(0,2,6,1) - X(0,2,6,2) + 99*Used(0,2) =G= 0 ; (LHS = 0)
     
REMAINING 46 ENTRIES SKIPPED


---- arco_usado_orientacion  =E=  

arco_usado_orientacion(0,1)..  Used(0,1) - Used(1,0) =E= 0 ; (LHS = 0)
     
arco_usado_orientacion(0,2)..  Used(0,2) - Used(2,0) =E= 0 ; (LHS = 0)
     
arco_usado_orientacion(0,3)..  Used(0,3) - Used(3,0) =E= 0 ; (LHS = 0)
     
REMAINING 39 ENTRIES SKIPPED


---- fiabilidad  =G=  Restriccion que impide elegir alguna ruta que tenga mas de cierta probabilidad de no ser usable

fiabilidad..  - 0.15200309344505*Used(0,1) - 1*Used(0,2) - 1.73696559416621*Used(0,3) - 0.514573172829758*Used(0,5) - 0.15200309344505*Used(1,0) - 1*Used(2,0) - 1.73696559416621*Used(3,0) - 1.32192809488736*Used(3,4) - 1.32192809488736*Used(4,3) - 0.514573172829758*Used(5,0) - 0.736965594166206*Used(5,6) - 0.736965594166206*Used(6,5) =G= -1.73696559416621 ; (LHS = 0)
     

---- f_ayuda  =E=  Funcion objetivo 1. Cantidad total del recurso repartida en cierta unidad

f_ayuda..  - Z_(0) - Z_(1) - Z_(2) - Z_(3) - Z_(4) - Z_(5) - Z_(6) + Ayuda =E= -19 ; (LHS = 0, INFES = 19 ****)
     

---- f_equidad  =E=  Funcion objetivo 2.  Criterio de equidad. Numero de nodos a los que se les reparte al menos una unidad de recurso

f_equidad..  - auxZ(0) - auxZ(1) - auxZ(2) - auxZ(3) - auxZ(4) - auxZ(5) - auxZ(6) + Eq =E= 0 ; (LHS = 0)
     
GAMS 41.2.0  5110e5ff Nov 14, 2022          WEX-WEI x86 64bit/MS Windows - 02/06/23 18:02:24 Page 4
modelo sencillo reconstruccion + reparto 1
Column Listing      SOLVE modelo1 Using MIP From line 167


---- X  Vehiculos de tipo v que van de i a j en el periodo t

X(0,0,0,0)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       lim_salida(0,0,0)
        1       existencia_ruta(0,0,0,0)
        1       usabilidad_ruta(0,0,0,0)
       -1       arco_usado(0,0)

X(0,0,0,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       lim_salida(0,0,1)
        1       existencia_ruta(0,0,0,1)
        1       usabilidad_ruta(0,0,0,1)
       -1       arco_usado(0,0)

X(0,0,0,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       lim_salida(0,0,2)
        1       existencia_ruta(0,0,0,2)
        1       usabilidad_ruta(0,0,0,2)
       -1       arco_usado(0,0)

REMAINING 1026 ENTRIES SKIPPED

---- Y  Vehiculos de tipo v que hay en j en el periodo t. Pueden seguir su ruta o bien quedarse en j para proseguir su ruta en otro periodo o bien permanecer en j hasta el final del ultimo periodo

Y(0,0,0)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       definir_Y(0,1,0)
       -1       lim_salida(0,1,0)
       10       flujo_ini_0

Y(0,0,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       definir_Y(0,1,1)
       -1       lim_salida(0,1,1)
       15       flujo_ini_0

Y(0,0,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       definir_Y(0,1,2)
       -1       lim_salida(0,1,2)
       30       flujo_ini_0

REMAINING 144 ENTRIES SKIPPED

---- Z  Vehiculos de tipo v totales emplazados en j al final del ultimo periodo. se asume que en ese momento hacen el reparto a j

Z(0,0)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       definir_Z(0,0)
       -1       definir_Z_(0)

Z(0,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       definir_Z(0,1)
       -2       definir_Z_(0)

Z(0,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       definir_Z(0,2)
       -5       definir_Z_(0)

REMAINING 18 ENTRIES SKIPPED

---- Z_  Ayuda total repartida a j

Z_(0)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       definir_Z_(0)
       -1       definir_auxZ(0)
        1       lim_demanda(0)
       -1       f_ayuda

Z_(1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       definir_Z_(1)
       -1       definir_auxZ(1)
        1       lim_demanda(1)
       -1       f_ayuda

Z_(2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       definir_Z_(2)
       -1       definir_auxZ(2)
        1       lim_demanda(2)
       -1       f_ayuda

REMAINING 4 ENTRIES SKIPPED

---- auxZ  Variable binaria que representa si se reparte al menos un vehiculo de recurso a j

auxZ(0)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       definir_auxZ(0)
       -1       f_equidad

auxZ(1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       definir_auxZ(1)
       -1       f_equidad

auxZ(2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       definir_auxZ(2)
       -1       f_equidad

REMAINING 4 ENTRIES SKIPPED

---- H  variable binaria que determina si habilitamos el puente de i a j

H(0,0)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
      -99       usabilidad_ruta(0,0,0,0)
      -99       usabilidad_ruta(0,0,0,1)
      -99       usabilidad_ruta(0,0,0,2)
      -99       usabilidad_ruta(0,0,1,0)
      -99       usabilidad_ruta(0,0,1,1)
      -99       usabilidad_ruta(0,0,1,2)
      -99       usabilidad_ruta(0,0,2,0)
      -99       usabilidad_ruta(0,0,2,1)
      -99       usabilidad_ruta(0,0,2,2)
      -99       usabilidad_ruta(0,0,3,0)
      -99       usabilidad_ruta(0,0,3,1)
      -99       usabilidad_ruta(0,0,3,2)
      -99       usabilidad_ruta(0,0,4,0)
      -99       usabilidad_ruta(0,0,4,1)
      -99       usabilidad_ruta(0,0,4,2)
      -99       usabilidad_ruta(0,0,5,0)
      -99       usabilidad_ruta(0,0,5,1)
      -99       usabilidad_ruta(0,0,5,2)
      -99       usabilidad_ruta(0,0,6,0)
      -99       usabilidad_ruta(0,0,6,1)
      -99       usabilidad_ruta(0,0,6,2)
        1       lim_puentes

H(0,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
      -99       usabilidad_ruta(0,1,0,0)
      -99       usabilidad_ruta(0,1,0,1)
      -99       usabilidad_ruta(0,1,0,2)
      -99       usabilidad_ruta(0,1,1,0)
      -99       usabilidad_ruta(0,1,1,1)
      -99       usabilidad_ruta(0,1,1,2)
      -99       usabilidad_ruta(0,1,2,0)
      -99       usabilidad_ruta(0,1,2,1)
      -99       usabilidad_ruta(0,1,2,2)
      -99       usabilidad_ruta(0,1,3,0)
      -99       usabilidad_ruta(0,1,3,1)
      -99       usabilidad_ruta(0,1,3,2)
      -99       usabilidad_ruta(0,1,4,0)
      -99       usabilidad_ruta(0,1,4,1)
      -99       usabilidad_ruta(0,1,4,2)
      -99       usabilidad_ruta(0,1,5,0)
      -99       usabilidad_ruta(0,1,5,1)
      -99       usabilidad_ruta(0,1,5,2)
      -99       usabilidad_ruta(0,1,6,0)
      -99       usabilidad_ruta(0,1,6,1)
      -99       usabilidad_ruta(0,1,6,2)
        1       orientacion(0,1)
       -1       orientacion(1,0)
        1       lim_puentes

H(0,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
      -99       usabilidad_ruta(0,2,0,0)
      -99       usabilidad_ruta(0,2,0,1)
      -99       usabilidad_ruta(0,2,0,2)
      -99       usabilidad_ruta(0,2,1,0)
      -99       usabilidad_ruta(0,2,1,1)
      -99       usabilidad_ruta(0,2,1,2)
      -99       usabilidad_ruta(0,2,2,0)
      -99       usabilidad_ruta(0,2,2,1)
      -99       usabilidad_ruta(0,2,2,2)
      -99       usabilidad_ruta(0,2,3,0)
      -99       usabilidad_ruta(0,2,3,1)
      -99       usabilidad_ruta(0,2,3,2)
      -99       usabilidad_ruta(0,2,4,0)
      -99       usabilidad_ruta(0,2,4,1)
      -99       usabilidad_ruta(0,2,4,2)
      -99       usabilidad_ruta(0,2,5,0)
      -99       usabilidad_ruta(0,2,5,1)
      -99       usabilidad_ruta(0,2,5,2)
      -99       usabilidad_ruta(0,2,6,0)
      -99       usabilidad_ruta(0,2,6,1)
      -99       usabilidad_ruta(0,2,6,2)
        1       orientacion(0,2)
       -1       orientacion(2,0)
        1       lim_puentes

REMAINING 46 ENTRIES SKIPPED

---- Used  

Used(0,0)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       99       arco_usado(0,0)

Used(0,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       99       arco_usado(0,1)
        1       arco_usado_orientacion(0,1)
       -1       arco_usado_orientacion(1,0)
       -0.152   fiabilidad

Used(0,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       99       arco_usado(0,2)
        1       arco_usado_orientacion(0,2)
       -1       arco_usado_orientacion(2,0)
       -1       fiabilidad

REMAINING 46 ENTRIES SKIPPED

---- Ayuda  Total demanda satisfecha

Ayuda
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       f_ayuda


---- Eq  Criterio de equidad. Numero de nodos a los que se reparte al menos un vehiculo

Eq
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       f_equidad

GAMS 41.2.0  5110e5ff Nov 14, 2022          WEX-WEI x86 64bit/MS Windows - 02/06/23 18:02:24 Page 5
modelo sencillo reconstruccion + reparto 1
Range Statistics    SOLVE modelo1 Using MIP From line 167


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 1.000E+00, 9.900E+01] - Zero values observed as well
Bound     [min, max] : [ 1.000E+00, 1.000E+00] - Zero values observed as well
Matrix    [min, max] : [ 1.520E-01, 9.900E+01]

GAMS 41.2.0  5110e5ff Nov 14, 2022          WEX-WEI x86 64bit/MS Windows - 02/06/23 18:02:24 Page 6
modelo sencillo reconstruccion + reparto 1
Model Statistics    SOLVE modelo1 Using MIP From line 167


MODEL STATISTICS

BLOCKS OF EQUATIONS          17     SINGLE EQUATIONS        2,529
BLOCKS OF VARIABLES           9     SINGLE VARIABLES        1,311
NON ZERO ELEMENTS         7,693     DISCRETE VARIABLES      1,302



**** The model exceeds the demo license limits for linear models of more than 2000 rows or columns
     As an academic user, you can submit large models to the NEOS service for free (see https://www.gams.com/neos)
     Alternatively, feel free to contact sales@gams.com to discuss your options

**** Terminated due to a licensing error
**** License file: C:\Users\Antonio\Documents\GAMS\gamslice.txt

**** Current license content:
     GAMS Demo license for Antonio Sevilla Sastre   G221121|0002CO-GEN
     UCM, Spain                                                       
     1084556100 **GAMS Demo license restricted to non-commercial use**
     189466700C                                                       
     DL079880                                       C DEMO            
     antsev01@ucm.es, Antonio Sevilla Sastre                          
