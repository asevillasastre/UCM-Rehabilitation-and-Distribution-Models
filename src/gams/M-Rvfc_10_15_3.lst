GAMS 41.2.0  5110e5ff Nov 14, 2022          WEX-WEI x86 64bit/MS Windows - 02/12/23 20:38:08 Page 1
modelo sencillo reconstruccion + reparto 1
C o m p i l a t i o n


   2   
   3  Set
   4  j Nodos. Representan los asentamientos.
   5  /0*9/
   6  t Periodos. Se asumen de misma duracion ademas de que todos los arcos se pueden recorrer en uno de estos periodos
   7  /0*15/
   8  v Tipos de vehiculo
   9  /0*2/
  10  ;
  11   
  12  Alias
  13  (j,i,k)
  14  ;
  15   
  16  Parameters
  17  dem(j) Demanda por cada asentamiento de un  unico recurso en toneladas
  18  /
  19  0 0,
  20  1 1,
  21  2 1,
  22  3 1,
  23  4 8,
  24  5 4,
  25  6 4,
  26  7 2,
  27  8 8,
  28  9 3
  29  /
  30  max_coste Maximo presupuesto que se puede invertir
  31  /70/
  32  max_puentes Maximo numero de puentes que podemos reconstruir previo paso (un puente por cada sentido consideramos un grafo orientado)
  33  /2/
  34  capacidad_vehiculo(v) Capacidad de hacer partir 1 vehiculo de tipo v
  35  /
  36  0 1,
  37  1 2,
  38  2 5
  39  /
  40  coste_vehiculo(v) Coste total y fijo de hacer partir 1 vehiculo de tipo v
  41  /
  42  0 10,
  43  1 15,
  44  2 20
  45  /
  46  P_total Probabilidad aceptable de que todos los convoys puedan pasar por todas las rutas elegidas
  47  /0.3/
  48  coste_variable Coste variable por km recorrido
  49  /1/
  50  ;
  51   
  52  * Matrices de ejemplo generadas con mi programa
  53  * [num_nodos, num_arcos, num_iniciales, num_finales, num_rotos] = [10, 15, 2, 3, 2]
  54  Table E(i,j) Existe la ruta de i a j
  55        0     1     2     3     4     5     6     7     8     9
  56  0     0     1     0     1     0     1     1     0     0     1
  57  1     1     0     0     0     0     0     1     0     1     0
  58  2     0     0     0     0     1     0     0     0     0     1
  59  3     1     0     0     0     1     0     0     1     0     0
  60  4     0     0     1     1     0     1     0     0     0     0
  61  5     1     0     0     0     1     0     0     1     0     0
  62  6     1     1     0     0     0     0     0     0     0     0
  63  7     0     0     0     1     0     1     0     0     1     1
  64  8     0     1     0     0     0     0     0     1     0     0
  65  9     1     0     1     0     0     0     0     1     0     0
  66  ;
  67  Table U(i,j) Al inicio es utilizable la ruta de i a j
  68        0     1     2     3     4     5     6     7     8     9
  69  0     0     0     0     0     0     0     0     0     0     0
  70  1     0     0     0     0     0     0     0     0     0     0
  71  2     0     0     0     0     0     0     0     0     0     0
  72  3     0     0     0     0     0     0     0     0     0     0
  73  4     0     0     0     0     0     0     0     0     0     0
  74  5     0     0     0     0     0     0     0     0     0     0
  75  6     0     0     0     0     0     0     0     0     0     0
  76  7     0     0     0     0     0     0     0     0     0     0
  77  8     0     0     0     0     0     0     0     0     0     0
  78  9     0     0     0     0     0     0     0     0     0     0
  79  ;
  80  Table P(i,j) Probabilidad de que la ruta de i a j sea usable
  81        0     1     2     3     4     5     6     7     8     9
  82  0     1     0.51  1     0.99  1     0.53  0.07  1     1     0.83
  83  1     0.51  1     1     1     1     1     0.17  1     0.18  1
  84  2     1     1     1     1     0.76  1     1     1     1     0.95
  85  3     0.99  1     1     1     0.4   1     1     0.87  1     1
  86  4     1     1     0.76  0.4   1     0.87  1     1     1     1
  87  5     0.53  1     1     1     0.87  1     1     0.9   1     1
  88  6     0.07  0.17  1     1     1     1     1     1     1     1
  89  7     1     1     1     0.87  1     0.9   1     1     0.84  0.57
  90  8     1     0.18  1     1     1     1     1     0.84  1     1
  91  9     0.83  1     0.95  1     1     1     1     0.57  1     1
  92  ;
  93  Table Dist(i,j) Distancia de las rutas de i a j
  94        0     1     2     3     4     5     6     7     8     9
  95  0     0     1     0     1     0     2     1     0     0     2
  96  1     1     0     0     0     0     0     1     0     1     0
  97  2     0     0     0     0     2     0     0     0     0     2
  98  3     1     0     0     0     2     0     0     1     0     0
  99  4     0     0     2     2     0     2     0     0     0     0
 100  5     2     0     0     0     2     0     0     1     0     0
 101  6     1     1     0     0     0     0     0     0     0     0
 102  7     0     0     0     1     0     1     0     0     2     1
 103  8     0     1     0     0     0     0     0     2     0     0
 104  9     2     0     2     0     0     0     0     1     0     0
 105  ;
 106   
 107   
 108   
 109   
 110  loop(i,
 111      loop(j,
 112          P(i, j) := log2(P(i,j));
 113          );
 114      );
 115   
 116  P_total = log2(P_total);
 117   
 118  Variables
 119  X(i,j,t,v)  Vehiculos de tipo v que van de i a j en el periodo t
 120   
 121  Y(j,t,v) Vehiculos de tipo v que hay en j en el periodo t. Pueden seguir su ruta o bien quedarse en j para proseguir su ruta en otro periodo o bien permanecer en j hasta el final del ultimo periodo
 122   
 123  Z(j,v) Vehiculos de tipo v totales emplazados en j al final del ultimo periodo. se asume que en ese momento hacen el reparto a j
 124   
 125  Z_(j) Ayuda total repartida a j
 126   
 127  auxZ(j) Variable binaria que representa si se reparte al menos un vehiculo de recurso a j
 128   
 129  H(i,j) variable binaria que determina si habilitamos el puente de i a j
 130   
 131  Coste Coste total del proyecto
 132   
 133  Used(i,j)
 134   
 135  Ayuda Total demanda satisfecha
 136  Eq Criterio de equidad. Numero de nodos a los que se reparte al menos un vehiculo
 137  ;
 138   
 139  Integer variables X, Y, Z;
 140  Binary variables auxZ, H, Used;
 141   
 142  Equations
 143   
 144  definir_Y(j,t,v) Restriccion de almacenamiento. En cierto nodo permanece lo almacenado en el anterior periodo mas lo que entra a el en el presente menos lo que sale
 145   
 146  definir_Z(j,v) Determina lo repartido como lo ubicado en cierto nodo en el ultimo periodo
 147   
 148  definir_Z_(j) Lo repartido a j en toneladas
 149   
 150  definir_auxZ(j)
 151   
 152  lim_salida(j,t,v) Limita los vehiculos que pueden salir de un nodo a las almacenados en el mismo
 153  flujo_ini(j,v) No hay almacenado nada en ningun nodo no inicial
 154  flujo_ini_0 En el nodo inicial esta almacenada la totalidad de los camiones
 155   
 156  existencia_ruta(i,j,t,v)
 157  usabilidad_ruta(i,j,t,v)
 158  orientacion(i,j) Si se habilita un sentido se ha de habilitar el opuesto
 159  lim_puentes Limite de puentes que podemos reconstruir
 160   
 161  lim_demanda(j) No se puede superar la demanda
 162   
 163  arco_usado(i,j) Pasa algun vehiculo por este nodo
 164  arco_usado_orientacion(i,j)
 165  fiabilidad Restriccion que impide elegir alguna ruta que tenga mas de cierta probabilidad de no ser usable
 166   
 167  f_ayuda Funcion objetivo 1. Cantidad total del recurso repartida en cierta unidad
 168  f_equidad Funcion objetivo 2.  Criterio de equidad. Numero de nodos a los que se les reparte al menos una unidad de recurso
 169  ;
 170   
 171  definir_Y(j,t,v)$(ord(t)>1).. Y(j,t,v) =E=
 172                              Y(j,t-1,v) + sum(i, X(i,j,t,v)) - sum(i, X(j,i,t,v));
 173  definir_Z(j,v).. Z(j,v) =E= Y(j,"3",v);
 174  definir_Z_(j).. Z_(j) =E= sum(v, Z(j,v)*capacidad_vehiculo(v));
 175  definir_auxZ(j).. auxZ(j) =L= Z_(j);
 176   
 177  lim_salida(j,t,v).. sum(i,X(j,i,t,v)) =L= Y(j,t-1,v);
 178  flujo_ini(j,v)$(ord(j)>1).. Y(j,"0",v) =E= 0;
 179  flujo_ini_0.. sum(v,Y("0","0",v)*coste_vehiculo(v)) + sum(i, sum(j, sum(t, sum(v, X(i,j,t,v)*Dist(i,j)*coste_variable)))) =L= max_coste;
 180  existencia_ruta(i,j,t,v).. X(i,j,t,v) =L= 99*E(i,j);
 181  usabilidad_ruta(i,j,t,v).. X(i,j,t,v) =L= 99*(U(i,j) +  H(i,j));
 182  orientacion(i,j).. H(i,j) =E= H(j,i);
 183  lim_puentes..  sum(i, sum(j, H(i,j))) =L= max_puentes;
 184   
 185  lim_demanda(j).. Z_(j) =L= dem(j);
 186   
 187  arco_usado(i,j).. 99*Used(i,j) =G= sum(t, sum(v, X(i,j,t,v)));
 188  arco_usado_orientacion(i,j).. Used(i,j)=E= Used(j,i);
 189  fiabilidad.. sum(i, sum(j, Used(i,j)*(P(i,j)))) =G= P_total;
 190   
 191  f_ayuda.. Ayuda =E= sum(j, Z_(j)-dem(j));
 192  f_equidad.. Eq =E= sum(j, auxZ(j));
 193  ;
 194   
 195  display P;
 196   
 197  model modelo1 /all - lim_demanda/;
 198   
 199  solve modelo1 using MIP maximizing Ayuda
 200  ;
 201  solve modelo1 using MIP maximizing Eq
 202  ;
 203   
 204  *
 205   
 206   
 207  *con 2 tipos de vehiculos
 208  *---   1,647 rows  863 columns  4,237 non-zeroes
 209  *---   854 discrete-columns
 210  *utiliza vehiculos y puentes distintos (los de menor capacidad para mayor equidad)
 211   
 212  *con 3 tipos de vehiculos:
 213  *---   2,437 rows  1,262 columns  6,267 non-zeroes
 214  *---   1,253 discrete-columns
 215  *The model exceeds the demo license limits for linear models of more than 2000 rows or columns
 216   
 217   


COMPILATION TIME     =        0.000 SECONDS      3 MB  41.2.0 5110e5ff WEX-WEI
GAMS 41.2.0  5110e5ff Nov 14, 2022          WEX-WEI x86 64bit/MS Windows - 02/12/23 20:38:08 Page 2
modelo sencillo reconstruccion + reparto 1
E x e c u t i o n


----    195 PARAMETER P  Probabilidad de que la ruta de i a j sea usable

            0           1           2           3           4           5           6           7           8           9

0                  -0.971                  -0.014                  -0.916      -3.837                              -0.269
1      -0.971                                                                  -2.556                  -2.474
2                                                      -0.396                                                      -0.074
3      -0.014                                          -1.322                              -0.201
4                              -0.396      -1.322                  -0.201
5      -0.916                                          -0.201                              -0.152
6      -3.837      -2.556
7                                          -0.201                  -0.152                              -0.252      -0.811
8                  -2.474                                                                  -0.252
9      -0.269                  -0.074                                                      -0.811

GAMS 41.2.0  5110e5ff Nov 14, 2022          WEX-WEI x86 64bit/MS Windows - 02/12/23 20:38:08 Page 3
modelo sencillo reconstruccion + reparto 1
Equation Listing    SOLVE modelo1 Using MIP From line 200


---- definir_Y  =E=  Restriccion de almacenamiento. En cierto nodo permanece lo almacenado en el anterior periodo mas lo que entra a el en el presente menos lo que sale

definir_Y(0,1,0)..  X(0,1,1,0) + X(0,2,1,0) + X(0,3,1,0) + X(0,4,1,0) + X(0,5,1,0) + X(0,6,1,0) + X(0,7,1,0) + X(0,8,1,0) + X(0,9,1,0) - X(1,0,1,0) - X(2,0,1,0) - X(3,0,1,0) - X(4,0,1,0) - X(5,0,1,0) - X(6,0,1,0) - X(7,0,1,0) - X(8,0,1,0) - X(9,0,1,0) - Y(0,0,0) + Y(0,1,0) =E= 0 ; (LHS = 0)
     
definir_Y(0,1,1)..  X(0,1,1,1) + X(0,2,1,1) + X(0,3,1,1) + X(0,4,1,1) + X(0,5,1,1) + X(0,6,1,1) + X(0,7,1,1) + X(0,8,1,1) + X(0,9,1,1) - X(1,0,1,1) - X(2,0,1,1) - X(3,0,1,1) - X(4,0,1,1) - X(5,0,1,1) - X(6,0,1,1) - X(7,0,1,1) - X(8,0,1,1) - X(9,0,1,1) - Y(0,0,1) + Y(0,1,1) =E= 0 ; (LHS = 0)
     
definir_Y(0,1,2)..  X(0,1,1,2) + X(0,2,1,2) + X(0,3,1,2) + X(0,4,1,2) + X(0,5,1,2) + X(0,6,1,2) + X(0,7,1,2) + X(0,8,1,2) + X(0,9,1,2) - X(1,0,1,2) - X(2,0,1,2) - X(3,0,1,2) - X(4,0,1,2) - X(5,0,1,2) - X(6,0,1,2) - X(7,0,1,2) - X(8,0,1,2) - X(9,0,1,2) - Y(0,0,2) + Y(0,1,2) =E= 0 ; (LHS = 0)
     
REMAINING 447 ENTRIES SKIPPED


---- definir_Z  =E=  Determina lo repartido como lo ubicado en cierto nodo en el ultimo periodo

definir_Z(0,0)..  - Y(0,3,0) + Z(0,0) =E= 0 ; (LHS = 0)
     
definir_Z(0,1)..  - Y(0,3,1) + Z(0,1) =E= 0 ; (LHS = 0)
     
definir_Z(0,2)..  - Y(0,3,2) + Z(0,2) =E= 0 ; (LHS = 0)
     
REMAINING 27 ENTRIES SKIPPED


---- definir_Z_  =E=  Lo repartido a j en toneladas

definir_Z_(0)..  - Z(0,0) - 2*Z(0,1) - 5*Z(0,2) + Z_(0) =E= 0 ; (LHS = 0)
     
definir_Z_(1)..  - Z(1,0) - 2*Z(1,1) - 5*Z(1,2) + Z_(1) =E= 0 ; (LHS = 0)
     
definir_Z_(2)..  - Z(2,0) - 2*Z(2,1) - 5*Z(2,2) + Z_(2) =E= 0 ; (LHS = 0)
     
REMAINING 7 ENTRIES SKIPPED


---- definir_auxZ  =L=  

definir_auxZ(0)..  - Z_(0) + auxZ(0) =L= 0 ; (LHS = 0)
     
definir_auxZ(1)..  - Z_(1) + auxZ(1) =L= 0 ; (LHS = 0)
     
definir_auxZ(2)..  - Z_(2) + auxZ(2) =L= 0 ; (LHS = 0)
     
REMAINING 7 ENTRIES SKIPPED


---- lim_salida  =L=  Limita los vehiculos que pueden salir de un nodo a las almacenados en el mismo

lim_salida(0,0,0)..  X(0,0,0,0) + X(0,1,0,0) + X(0,2,0,0) + X(0,3,0,0) + X(0,4,0,0) + X(0,5,0,0) + X(0,6,0,0) + X(0,7,0,0) + X(0,8,0,0) + X(0,9,0,0) =L= 0 ; (LHS = 0)
     
lim_salida(0,0,1)..  X(0,0,0,1) + X(0,1,0,1) + X(0,2,0,1) + X(0,3,0,1) + X(0,4,0,1) + X(0,5,0,1) + X(0,6,0,1) + X(0,7,0,1) + X(0,8,0,1) + X(0,9,0,1) =L= 0 ; (LHS = 0)
     
lim_salida(0,0,2)..  X(0,0,0,2) + X(0,1,0,2) + X(0,2,0,2) + X(0,3,0,2) + X(0,4,0,2) + X(0,5,0,2) + X(0,6,0,2) + X(0,7,0,2) + X(0,8,0,2) + X(0,9,0,2) =L= 0 ; (LHS = 0)
     
REMAINING 477 ENTRIES SKIPPED


---- flujo_ini  =E=  No hay almacenado nada en ningun nodo no inicial

flujo_ini(1,0)..  Y(1,0,0) =E= 0 ; (LHS = 0)
     
flujo_ini(1,1)..  Y(1,0,1) =E= 0 ; (LHS = 0)
     
flujo_ini(1,2)..  Y(1,0,2) =E= 0 ; (LHS = 0)
     
REMAINING 24 ENTRIES SKIPPED


---- flujo_ini_0  =L=  En el nodo inicial esta almacenada la totalidad de los camiones

flujo_ini_0..  X(0,1,0,0) + X(0,1,0,1) + X(0,1,0,2) + X(0,1,1,0) + X(0,1,1,1) + X(0,1,1,2) + X(0,1,2,0) + X(0,1,2,1) + X(0,1,2,2) + X(0,1,3,0) + X(0,1,3,1) + X(0,1,3,2) + X(0,1,4,0) + X(0,1,4,1) + X(0,1,4,2) + X(0,1,5,0) + X(0,1,5,1) + X(0,1,5,2) + X(0,1,6,0) + X(0,1,6,1) + X(0,1,6,2) + X(0,1,7,0) + X(0,1,7,1) + X(0,1,7,2) + X(0,1,8,0) + X(0,1,8,1) + X(0,1,8,2) + X(0,1,9,0) + X(0,1,9,1) + X(0,1,9,2) + X(0,1,10,0) + X(0,1,10,1) + X(0,1,10,2) + X(0,1,11,0) + X(0,1,11,1) + X(0,1,11,2) + X(0,1,12,0) + X(0,1,12,1) + X(0,1,12,2) + X(0,1,13,0) + X(0,1,13,1) + X(0,1,13,2) + X(0,1,14,0) + X(0,1,14,1) + X(0,1,14,2) + X(0,1,15,0) + X(0,1,15,1) + X(0,1,15,2) + X(0,3,0,0) + X(0,3,0,1) + X(0,3,0,2) + X(0,3,1,0) + X(0,3,1,1) + X(0,3,1,2) + X(0,3,2,0) + X(0,3,2,1) + X(0,3,2,2) + X(0,3,3,0) + X(0,3,3,1) + X(0,3,3,2) + X(0,3,4,0) + X(0,3,4,1) + X(0,3,4,2) + X(0,3,5,0) + X(0,3,5,1) + X(0,3,5,2) + X(0,3,6,0) + X(0,3,6,1) + X(0,3,6,2) + X(0,3,7,0) + X(0,3,7,1) + X(0,3,7,2) + X(0,3,8,0) + X(0,3,8,1) + X(0,3,8,2) + X(0,3,9,0) + X(0,3,9,1) + X(0,3,9,2) + X(0,3,10,0) + X(0,3,10,1) + X(0,3,10,2) + X(0,3,11,0) + X(0,3,11,1) + X(0,3,11,2) + X(0,3,12,0) + X(0,3,12,1) + X(0,3,12,2) + X(0,3,13,0) + X(0,3,13,1) + X(0,3,13,2) + X(0,3,14,0) + X(0,3,14,1) + X(0,3,14,2) + X(0,3,15,0) + X(0,3,15,1) + X(0,3,15,2) + 2*X(0,5,0,0) + 2*X(0,5,0,1) + 2*X(0,5,0,2) + 2*X(0,5,1,0) + 2*X(0,5,1,1) + 2*X(0,5,1,2) + 2*X(0,5,2,0) + 2*X(0,5,2,1) + 2*X(0,5,2,2) + 2*X(0,5,3,0) + 2*X(0,5,3,1) + 2*X(0,5,3,2) + 2*X(0,5,4,0) + 2*X(0,5,4,1) + 2*X(0,5,4,2) + 2*X(0,5,5,0) + 2*X(0,5,5,1) + 2*X(0,5,5,2) + 2*X(0,5,6,0) + 2*X(0,5,6,1) + 2*X(0,5,6,2) + 2*X(0,5,7,0) + 2*X(0,5,7,1) + 2*X(0,5,7,2) + 2*X(0,5,8,0) + 2*X(0,5,8,1) + 2*X(0,5,8,2) + 2*X(0,5,9,0) + 2*X(0,5,9,1) + 2*X(0,5,9,2) + 2*X(0,5,10,0) + 2*X(0,5,10,1) + 2*X(0,5,10,2) + 2*X(0,5,11,0) + 2*X(0,5,11,1) + 2*X(0,5,11,2) + 2*X(0,5,12,0) + 2*X(0,5,12,1) + 2*X(0,5,12,2) + 2*X(0,5,13,0) + 2*X(0,5,13,1) + 2*X(0,5,13,2) + 2*X(0,5,14,0) + 2*X(0,5,14,1) + 2*X(0,5,14,2) + 2*X(0,5,15,0) + 2*X(0,5,15,1) + 2*X(0,5,15,2) + X(0,6,0,0) + X(0,6,0,1) + X(0,6,0,2) + X(0,6,1,0) + X(0,6,1,1) + X(0,6,1,2) + X(0,6,2,0) + X(0,6,2,1) + X(0,6,2,2) + X(0,6,3,0) + X(0,6,3,1) + X(0,6,3,2) + X(0,6,4,0) + X(0,6,4,1) + X(0,6,4,2) + X(0,6,5,0) + X(0,6,5,1) + X(0,6,5,2) + X(0,6,6,0) + X(0,6,6,1) + X(0,6,6,2) + X(0,6,7,0) + X(0,6,7,1) + X(0,6,7,2) + X(0,6,8,0) + X(0,6,8,1) + X(0,6,8,2) + X(0,6,9,0) + X(0,6,9,1) + X(0,6,9,2) + X(0,6,10,0) + X(0,6,10,1) + X(0,6,10,2) + X(0,6,11,0) + X(0,6,11,1) + X(0,6,11,2) + X(0,6,12,0) + X(0,6,12,1) + X(0,6,12,2) + X(0,6,13,0) + X(0,6,13,1) + X(0,6,13,2) + X(0,6,14,0) + X(0,6,14,1) + X(0,6,14,2) + X(0,6,15,0) + X(0,6,15,1) + X(0,6,15,2) + 2*X(0,9,0,0) + 2*X(0,9,0,1) + 2*X(0,9,0,2) + 2*X(0,9,1,0) + 2*X(0,9,1,1) + 2*X(0,9,1,2) + 2*X(0,9,2,0) + 2*X(0,9,2,1) + 2*X(0,9,2,2) + 2*X(0,9,3,0) + 2*X(0,9,3,1) + 2*X(0,9,3,2) + 2*X(0,9,4,0) + 2*X(0,9,4,1) + 2*X(0,9,4,2) + 2*X(0,9,5,0) + 2*X(0,9,5,1) + 2*X(0,9,5,2) + 2*X(0,9,6,0) + 2*X(0,9,6,1) + 2*X(0,9,6,2) + 2*X(0,9,7,0) + 2*X(0,9,7,1) + 2*X(0,9,7,2) + 2*X(0,9,8,0) + 2*X(0,9,8,1) + 2*X(0,9,8,2) + 2*X(0,9,9,0) + 2*X(0,9,9,1) + 2*X(0,9,9,2) + 2*X(0,9,10,0) + 2*X(0,9,10,1) + 2*X(0,9,10,2) + 2*X(0,9,11,0) + 2*X(0,9,11,1) + 2*X(0,9,11,2) + 2*X(0,9,12,0) + 2*X(0,9,12,1) + 2*X(0,9,12,2) + 2*X(0,9,13,0) + 2*X(0,9,13,1) + 2*X(0,9,13,2) + 2*X(0,9,14,0) + 2*X(0,9,14,1) + 2*X(0,9,14,2) + 2*X(0,9,15,0) + 2*X(0,9,15,1) + 2*X(0,9,15,2) + X(1,0,0,0) + X(1,0,0,1) + X(1,0,0,2) + X(1,0,1,0) + X(1,0,1,1) + X(1,0,1,2) + X(1,0,2,0) + X(1,0,2,1) + X(1,0,2,2) + X(1,0,3,0) + X(1,0,3,1) + X(1,0,3,2) + X(1,0,4,0) + X(1,0,4,1) + X(1,0,4,2) + X(1,0,5,0) + X(1,0,5,1) + X(1,0,5,2) + X(1,0,6,0) + X(1,0,6,1) + X(1,0,6,2) + X(1,0,7,0) + X(1,0,7,1) + X(1,0,7,2) + X(1,0,8,0) + X(1,0,8,1) + X(1,0,8,2) + X(1,0,9,0) + X(1,0,9,1) + X(1,0,9,2) + X(1,0,10,0) + X(1,0,10,1) + X(1,0,10,2) + X(1,0,11,0) + X(1,0,11,1) + X(1,0,11,2) + X(1,0,12,0) + X(1,0,12,1) + X(1,0,12,2) + X(1,0,13,0) + X(1,0,13,1) + X(1,0,13,2) + X(1,0,14,0) + X(1,0,14,1) + X(1,0,14,2) + X(1,0,15,0) + X(1,0,15,1) + X(1,0,15,2) + X(1,6,0,0) + X(1,6,0,1) + X(1,6,0,2) + X(1,6,1,0) + X(1,6,1,1) + X(1,6,1,2) + X(1,6,2,0) + X(1,6,2,1) + X(1,6,2,2) + X(1,6,3,0) + X(1,6,3,1) + X(1,6,3,2) + X(1,6,4,0) + X(1,6,4,1) + X(1,6,4,2) + X(1,6,5,0) + X(1,6,5,1) + X(1,6,5,2) + X(1,6,6,0) + X(1,6,6,1) + X(1,6,6,2) + X(1,6,7,0) + X(1,6,7,1) + X(1,6,7,2) + X(1,6,8,0) + X(1,6,8,1) + X(1,6,8,2) + X(1,6,9,0) + X(1,6,9,1) + X(1,6,9,2) + X(1,6,10,0) + X(1,6,10,1) + X(1,6,10,2) + X(1,6,11,0) + X(1,6,11,1) + X(1,6,11,2) + X(1,6,12,0) + X(1,6,12,1) + X(1,6,12,2) + X(1,6,13,0) + X(1,6,13,1) + X(1,6,13,2) + X(1,6,14,0) + X(1,6,14,1) + X(1,6,14,2) + X(1,6,15,0) + X(1,6,15,1) + X(1,6,15,2) + X(1,8,0,0) + X(1,8,0,1) + X(1,8,0,2) + X(1,8,1,0) + X(1,8,1,1) + X(1,8,1,2) + X(1,8,2,0) + X(1,8,2,1) + X(1,8,2,2) + X(1,8,3,0) + X(1,8,3,1) + X(1,8,3,2) + X(1,8,4,0) + X(1,8,4,1) + X(1,8,4,2) + X(1,8,5,0) + X(1,8,5,1) + X(1,8,5,2) + X(1,8,6,0) + X(1,8,6,1) + X(1,8,6,2) + X(1,8,7,0) + X(1,8,7,1) + X(1,8,7,2) + X(1,8,8,0) + X(1,8,8,1) + X(1,8,8,2) + X(1,8,9,0) + X(1,8,9,1) + X(1,8,9,2) + X(1,8,10,0) + X(1,8,10,1) + X(1,8,10,2) + X(1,8,11,0) + X(1,8,11,1) + X(1,8,11,2) + X(1,8,12,0) + X(1,8,12,1) + X(1,8,12,2) + X(1,8,13,0) + X(1,8,13,1) + X(1,8,13,2) + X(1,8,14,0) + X(1,8,14,1) + X(1,8,14,2) + X(1,8,15,0) + X(1,8,15,1) + X(1,8,15,2) + 2*X(2,4,0,0) + 2*X(2,4,0,1) + 2*X(2,4,0,2) + 2*X(2,4,1,0) + 2*X(2,4,1,1) + 2*X(2,4,1,2) + 2*X(2,4,2,0) + 2*X(2,4,2,1) + 2*X(2,4,2,2) + 2*X(2,4,3,0) + 2*X(2,4,3,1) + 2*X(2,4,3,2) + 2*X(2,4,4,0) + 2*X(2,4,4,1) + 2*X(2,4,4,2) + 2*X(2,4,5,0) + 2*X(2,4,5,1) + 2*X(2,4,5,2) + 2*X(2,4,6,0) + 2*X(2,4,6,1) + 2*X(2,4,6,2) + 2*X(2,4,7,0) + 2*X(2,4,7,1) + 2*X(2,4,7,2) + 2*X(2,4,8,0) + 2*X(2,4,8,1) + 2*X(2,4,8,2) + 2*X(2,4,9,0) + 2*X(2,4,9,1) + 2*X(2,4,9,2) + 2*X(2,4,10,0) + 2*X(2,4,10,1) + 2*X(2,4,10,2) + 2*X(2,4,11,0) + 2*X(2,4,11,1) + 2*X(2,4,11,2) + 2*X(2,4,12,0) + 2*X(2,4,12,1) + 2*X(2,4,12,2) + 2*X(2,4,13,0) + 2*X(2,4,13,1) + 2*X(2,4,13,2) + 2*X(2,4,14,0) + 2*X(2,4,14,1) + 2*X(2,4,14,2) + 2*X(2,4,15,0) + 2*X(2,4,15,1) + 2*X(2,4,15,2) + 2*X(2,9,0,0) + 2*X(2,9,0,1) + 2*X(2,9,0,2) + 2*X(2,9,1,0) + 2*X(2,9,1,1) + 2*X(2,9,1,2) + 2*X(2,9,2,0) + 2*X(2,9,2,1) + 2*X(2,9,2,2) + 2*X(2,9,3,0) + 2*X(2,9,3,1) + 2*X(2,9,3,2) + 2*X(2,9,4,0) + 2*X(2,9,4,1) + 2*X(2,9,4,2) + 2*X(2,9,5,0) + 2*X(2,9,5,1) + 2*X(2,9,5,2) + 2*X(2,9,6,0) + 2*X(2,9,6,1) + 2*X(2,9,6,2) + 2*X(2,9,7,0) + 2*X(2,9,7,1) + 2*X(2,9,7,2) + 2*X(2,9,8,0) + 2*X(2,9,8,1) + 2*X(2,9,8,2) + 2*X(2,9,9,0) + 2*X(2,9,9,1) + 2*X(2,9,9,2) + 2*X(2,9,10,0) + 2*X(2,9,10,1) + 2*X(2,9,10,2) + 2*X(2,9,11,0) + 2*X(2,9,11,1) + 2*X(2,9,11,2) + 2*X(2,9,12,0) + 2*X(2,9,12,1) + 2*X(2,9,12,2) + 2*X(2,9,13,0) + 2*X(2,9,13,1) + 2*X(2,9,13,2) + 2*X(2,9,14,0) + 2*X(2,9,14,1) + 2*X(2,9,14,2) + 2*X(2,9,15,0) + 2*X(2,9,15,1) + 2*X(2,9,15,2) + X(3,0,0,0) + X(3,0,0,1) + X(3,0,0,2) + X(3,0,1,0) + X(3,0,1,1) + X(3,0,1,2) + X(3,0,2,0) + X(3,0,2,1) + X(3,0,2,2) + X(3,0,3,0) + X(3,0,3,1) + X(3,0,3,2) + X(3,0,4,0) + X(3,0,4,1) + X(3,0,4,2) + X(3,0,5,0) + X(3,0,5,1) + X(3,0,5,2) + X(3,0,6,0) + X(3,0,6,1) + X(3,0,6,2) + X(3,0,7,0) + X(3,0,7,1) + X(3,0,7,2) + X(3,0,8,0) + X(3,0,8,1) + X(3,0,8,2) + X(3,0,9,0) + X(3,0,9,1) + X(3,0,9,2) + X(3,0,10,0) + X(3,0,10,1) + X(3,0,10,2) + X(3,0,11,0) + X(3,0,11,1) + X(3,0,11,2) + X(3,0,12,0) + X(3,0,12,1) + X(3,0,12,2) + X(3,0,13,0) + X(3,0,13,1) + X(3,0,13,2) + X(3,0,14,0) + X(3,0,14,1) + X(3,0,14,2) + X(3,0,15,0) + X(3,0,15,1) + X(3,0,15,2) + 2*X(3,4,0,0) + 2*X(3,4,0,1) + 2*X(3,4,0,2) + 2*X(3,4,1,0) + 2*X(3,4,1,1) + 2*X(3,4,1,2) + 2*X(3,4,2,0) + 2*X(3,4,2,1) + 2*X(3,4,2,2) + 2*X(3,4,3,0) + 2*X(3,4,3,1) + 2*X(3,4,3,2) + 2*X(3,4,4,0) + 2*X(3,4,4,1) + 2*X(3,4,4,2) + 2*X(3,4,5,0) + 2*X(3,4,5,1) + 2*X(3,4,5,2) + 2*X(3,4,6,0) + 2*X(3,4,6,1) + 2*X(3,4,6,2) + 2*X(3,4,7,0) + 2*X(3,4,7,1) + 2*X(3,4,7,2) + 2*X(3,4,8,0) + 2*X(3,4,8,1) + 2*X(3,4,8,2) + 2*X(3,4,9,0) + 2*X(3,4,9,1) + 2*X(3,4,9,2) + 2*X(3,4,10,0) + 2*X(3,4,10,1) + 2*X(3,4,10,2) + 2*X(3,4,11,0) + 2*X(3,4,11,1) + 2*X(3,4,11,2) + 2*X(3,4,12,0) + 2*X(3,4,12,1) + 2*X(3,4,12,2) + 2*X(3,4,13,0) + 2*X(3,4,13,1) + 2*X(3,4,13,2) + 2*X(3,4,14,0) + 2*X(3,4,14,1) + 2*X(3,4,14,2) + 2*X(3,4,15,0) + 2*X(3,4,15,1) + 2*X(3,4,15,2) + X(3,7,0,0) + X(3,7,0,1) + X(3,7,0,2) + X(3,7,1,0) + X(3,7,1,1) + X(3,7,1,2) + X(3,7,2,0) + X(3,7,2,1) + X(3,7,2,2) + X(3,7,3,0) + X(3,7,3,1) + X(3,7,3,2) + X(3,7,4,0) + X(3,7,4,1) + X(3,7,4,2) + X(3,7,5,0) + X(3,7,5,1) + X(3,7,5,2) + X(3,7,6,0) + X(3,7,6,1) + X(3,7,6,2) + X(3,7,7,0) + X(3,7,7,1) + X(3,7,7,2) + X(3,7,8,0) + X(3,7,8,1) + X(3,7,8,2) + X(3,7,9,0) + X(3,7,9,1) + X(3,7,9,2) + X(3,7,10,0) + X(3,7,10,1) + X(3,7,10,2) + X(3,7,11,0) + X(3,7,11,1) + X(3,7,11,2) + X(3,7,12,0) + X(3,7,12,1) + X(3,7,12,2) + X(3,7,13,0) + X(3,7,13,1) + X(3,7,13,2) + X(3,7,14,0) + X(3,7,14,1) + X(3,7,14,2) + X(3,7,15,0) + X(3,7,15,1) + X(3,7,15,2) + 2*X(4,2,0,0) + 2*X(4,2,0,1) + 2*X(4,2,0,2) + 2*X(4,2,1,0) + 2*X(4,2,1,1) + 2*X(4,2,1,2) + 2*X(4,2,2,0) + 2*X(4,2,2,1) + 2*X(4,2,2,2) + 2*X(4,2,3,0) + 2*X(4,2,3,1) + 2*X(4,2,3,2) + 2*X(4,2,4,0) + 2*X(4,2,4,1) + 2*X(4,2,4,2) + 2*X(4,2,5,0) + 2*X(4,2,5,1) + 2*X(4,2,5,2) + 2*X(4,2,6,0) + 2*X(4,2,6,1) + 2*X(4,2,6,2) + 2*X(4,2,7,0) + 2*X(4,2,7,1) + 2*X(4,2,7,2) + 2*X(4,2,8,0) + 2*X(4,2,8,1) + 2*X(4,2,8,2) + 2*X(4,2,9,0) + 2*X(4,2,9,1) + 2*X(4,2,9,2) + 2*X(4,2,10,0) + 2*X(4,2,10,1) + 2*X(4,2,10,2) + 2*X(4,2,11,0) + 2*X(4,2,11,1) + 2*X(4,2,11,2) + 2*X(4,2,12,0) + 2*X(4,2,12,1) + 2*X(4,2,12,2) + 2*X(4,2,13,0) + 2*X(4,2,13,1) + 2*X(4,2,13,2) + 2*X(4,2,14,0) + 2*X(4,2,14,1) + 2*X(4,2,14,2) + 2*X(4,2,15,0) + 2*X(4,2,15,1) + 2*X(4,2,15,2) + 2*X(4,3,0,0) + 2*X(4,3,0,1) + 2*X(4,3,0,2) + 2*X(4,3,1,0) + 2*X(4,3,1,1) + 2*X(4,3,1,2) + 2*X(4,3,2,0) + 2*X(4,3,2,1) + 2*X(4,3,2,2) + 2*X(4,3,3,0) + 2*X(4,3,3,1) + 2*X(4,3,3,2) + 2*X(4,3,4,0) + 2*X(4,3,4,1) + 2*X(4,3,4,2) + 2*X(4,3,5,0) + 2*X(4,3,5,1) + 2*X(4,3,5,2) + 2*X(4,3,6,0) + 2*X(4,3,6,1) + 2*X(4,3,6,2) + 2*X(4,3,7,0) + 2*X(4,3,7,1) + 2*X(4,3,7,2) + 2*X(4,3,8,0) + 2*X(4,3,8,1) + 2*X(4,3,8,2) + 2*X(4,3,9,0) + 2*X(4,3,9,1) + 2*X(4,3,9,2) + 2*X(4,3,10,0) + 2*X(4,3,10,1) + 2*X(4,3,10,2) + 2*X(4,3,11,0) + 2*X(4,3,11,1) + 2*X(4,3,11,2) + 2*X(4,3,12,0) + 2*X(4,3,12,1) + 2*X(4,3,12,2) + 2*X(4,3,13,0) + 2*X(4,3,13,1) + 2*X(4,3,13,2) + 2*X(4,3,14,0) + 2*X(4,3,14,1) + 2*X(4,3,14,2) + 2*X(4,3,15,0) + 2*X(4,3,15,1) + 2*X(4,3,15,2) + 2*X(4,5,0,0) + 2*X(4,5,0,1) + 2*X(4,5,0,2) + 2*X(4,5,1,0) + 2*X(4,5,1,1) + 2*X(4,5,1,2) + 2*X(4,5,2,0) + 2*X(4,5,2,1) + 2*X(4,5,2,2) + 2*X(4,5,3,0) + 2*X(4,5,3,1) + 2*X(4,5,3,2) + 2*X(4,5,4,0) + 2*X(4,5,4,1) + 2*X(4,5,4,2) + 2*X(4,5,5,0) + 2*X(4,5,5,1) + 2*X(4,5,5,2) + 2*X(4,5,6,0) + 2*X(4,5,6,1) + 2*X(4,5,6,2) + 2*X(4,5,7,0) + 2*X(4,5,7,1) + 2*X(4,5,7,2) + 2*X(4,5,8,0) + 2*X(4,5,8,1) + 2*X(4,5,8,2) + 2*X(4,5,9,0) + 2*X(4,5,9,1) + 2*X(4,5,9,2) + 2*X(4,5,10,0) + 2*X(4,5,10,1) + 2*X(4,5,10,2) + 2*X(4,5,11,0) + 2*X(4,5,11,1) + 2*X(4,5,11,2) + 2*X(4,5,12,0) + 2*X(4,5,12,1) + 2*X(4,5,12,2) + 2*X(4,5,13,0) + 2*X(4,5,13,1) + 2*X(4,5,13,2) + 2*X(4,5,14,0) + 2*X(4,5,14,1) + 2*X(4,5,14,2) + 2*X(4,5,15,0) + 2*X(4,5,15,1) + 2*X(4,5,15,2) + 2*X(5,0,0,0) + 2*X(5,0,0,1) + 2*X(5,0,0,2) + 2*X(5,0,1,0) + 2*X(5,0,1,1) + 2*X(5,0,1,2) + 2*X(5,0,2,0) + 2*X(5,0,2,1) + 2*X(5,0,2,2) + 2*X(5,0,3,0) + 2*X(5,0,3,1) + 2*X(5,0,3,2) + 2*X(5,0,4,0) + 2*X(5,0,4,1) + 2*X(5,0,4,2) + 2*X(5,0,5,0) + 2*X(5,0,5,1) + 2*X(5,0,5,2) + 2*X(5,0,6,0) + 2*X(5,0,6,1) + 2*X(5,0,6,2) + 2*X(5,0,7,0) + 2*X(5,0,7,1) + 2*X(5,0,7,2) + 2*X(5,0,8,0) + 2*X(5,0,8,1) + 2*X(5,0,8,2) + 2*X(5,0,9,0) + 2*X(5,0,9,1) + 2*X(5,0,9,2) + 2*X(5,0,10,0) + 2*X(5,0,10,1) + 2*X(5,0,10,2) + 2*X(5,0,11,0) + 2*X(5,0,11,1) + 2*X(5,0,11,2) + 2*X(5,0,12,0) + 2*X(5,0,12,1) + 2*X(5,0,12,2) + 2*X(5,0,13,0) + 2*X(5,0,13,1) + 2*X(5,0,13,2) + 2*X(5,0,14,0) + 2*X(5,0,14,1) + 2*X(5,0,14,2) + 2*X(5,0,15,0) + 2*X(5,0,15,1) + 2*X(5,0,15,2) + 2*X(5,4,0,0) + 2*X(5,4,0,1) + 2*X(5,4,0,2) + 2*X(5,4,1,0) + 2*X(5,4,1,1) + 2*X(5,4,1,2) + 2*X(5,4,2,0) + 2*X(5,4,2,1) + 2*X(5,4,2,2) + 2*X(5,4,3,0) + 2*X(5,4,3,1) + 2*X(5,4,3,2) + 2*X(5,4,4,0) + 2*X(5,4,4,1) + 2*X(5,4,4,2) + 2*X(5,4,5,0) + 2*X(5,4,5,1) + 2*X(5,4,5,2) + 2*X(5,4,6,0) + 2*X(5,4,6,1) + 2*X(5,4,6,2) + 2*X(5,4,7,0) + 2*X(5,4,7,1) + 2*X(5,4,7,2) + 2*X(5,4,8,0) + 2*X(5,4,8,1) + 2*X(5,4,8,2) + 2*X(5,4,9,0) + 2*X(5,4,9,1) + 2*X(5,4,9,2) + 2*X(5,4,10,0) + 2*X(5,4,10,1) + 2*X(5,4,10,2) + 2*X(5,4,11,0) + 2*X(5,4,11,1) + 2*X(5,4,11,2) + 2*X(5,4,12,0) + 2*X(5,4,12,1) + 2*X(5,4,12,2) + 2*X(5,4,13,0) + 2*X(5,4,13,1) + 2*X(5,4,13,2) + 2*X(5,4,14,0) + 2*X(5,4,14,1) + 2*X(5,4,14,2) + 2*X(5,4,15,0) + 2*X(5,4,15,1) + 2*X(5,4,15,2) + X(5,7,0,0) + X(5,7,0,1) + X(5,7,0,2) + X(5,7,1,0) + X(5,7,1,1) + X(5,7,1,2) + X(5,7,2,0) + X(5,7,2,1) + X(5,7,2,2) + X(5,7,3,0) + X(5,7,3,1) + X(5,7,3,2) + X(5,7,4,0) + X(5,7,4,1) + X(5,7,4,2) + X(5,7,5,0) + X(5,7,5,1) + X(5,7,5,2) + X(5,7,6,0) + X(5,7,6,1) + X(5,7,6,2) + X(5,7,7,0) + X(5,7,7,1) + X(5,7,7,2) + X(5,7,8,0) + X(5,7,8,1) + X(5,7,8,2) + X(5,7,9,0) + X(5,7,9,1) + X(5,7,9,2) + X(5,7,10,0) + X(5,7,10,1) + X(5,7,10,2) + X(5,7,11,0) + X(5,7,11,1) + X(5,7,11,2) + X(5,7,12,0) + X(5,7,12,1) + X(5,7,12,2) + X(5,7,13,0) + X(5,7,13,1) + X(5,7,13,2) + X(5,7,14,0) + X(5,7,14,1) + X(5,7,14,2) + X(5,7,15,0) + X(5,7,15,1) + X(5,7,15,2) + X(6,0,0,0) + X(6,0,0,1) + X(6,0,0,2) + X(6,0,1,0) + X(6,0,1,1) + X(6,0,1,2) + X(6,0,2,0) + X(6,0,2,1) + X(6,0,2,2) + X(6,0,3,0) + X(6,0,3,1) + X(6,0,3,2) + X(6,0,4,0) + X(6,0,4,1) + X(6,0,4,2) + X(6,0,5,0) + X(6,0,5,1) + X(6,0,5,2) + X(6,0,6,0) + X(6,0,6,1) + X(6,0,6,2) + X(6,0,7,0) + X(6,0,7,1) + X(6,0,7,2) + X(6,0,8,0) + X(6,0,8,1) + X(6,0,8,2) + X(6,0,9,0) + X(6,0,9,1) + X(6,0,9,2) + X(6,0,10,0) + X(6,0,10,1) + X(6,0,10,2) + X(6,0,11,0) + X(6,0,11,1) + X(6,0,11,2) + X(6,0,12,0) + X(6,0,12,1) + X(6,0,12,2) + X(6,0,13,0) + X(6,0,13,1) + X(6,0,13,2) + X(6,0,14,0) + X(6,0,14,1) + X(6,0,14,2) + X(6,0,15,0) + X(6,0,15,1) + X(6,0,15,2) + X(6,1,0,0) + X(6,1,0,1) + X(6,1,0,2) + X(6,1,1,0) + X(6,1,1,1) + X(6,1,1,2) + X(6,1,2,0) + X(6,1,2,1) + X(6,1,2,2) + X(6,1,3,0) + X(6,1,3,1) + X(6,1,3,2) + X(6,1,4,0) + X(6,1,4,1) + X(6,1,4,2) + X(6,1,5,0) + X(6,1,5,1) + X(6,1,5,2) + X(6,1,6,0) + X(6,1,6,1) + X(6,1,6,2) + X(6,1,7,0) + X(6,1,7,1) + X(6,1,7,2) + X(6,1,8,0) + X(6,1,8,1) + X(6,1,8,2) + X(6,1,9,0) + X(6,1,9,1) + X(6,1,9,2) + X(6,1,10,0) + X(6,1,10,1) + X(6,1,10,2) + X(6,1,11,0) + X(6,1,11,1) + X(6,1,11,2) + X(6,1,12,0) + X(6,1,12,1) + X(6,1,12,2) + X(6,1,13,0) + X(6,1,13,1) + X(6,1,13,2) + X(6,1,14,0) + X(6,1,14,1) + X(6,1,14,2) + X(6,1,15,0) + X(6,1,15,1) + X(6,1,15,2) + X(7,3,0,0) + X(7,3,0,1) + X(7,3,0,2) + X(7,3,1,0) + X(7,3,1,1) + X(7,3,1,2) + X(7,3,2,0) + X(7,3,2,1) + X(7,3,2,2) + X(7,3,3,0) + X(7,3,3,1) + X(7,3,3,2) + X(7,3,4,0) + X(7,3,4,1) + X(7,3,4,2) + X(7,3,5,0) + X(7,3,5,1) + X(7,3,5,2) + X(7,3,6,0) + X(7,3,6,1) + X(7,3,6,2) + X(7,3,7,0) + X(7,3,7,1) + X(7,3,7,2) + X(7,3,8,0) + X(7,3,8,1) + X(7,3,8,2) + X(7,3,9,0) + X(7,3,9,1) + X(7,3,9,2) + X(7,3,10,0) + X(7,3,10,1) + X(7,3,10,2) + X(7,3,11,0) + X(7,3,11,1) + X(7,3,11,2) + X(7,3,12,0) + X(7,3,12,1) + X(7,3,12,2) + X(7,3,13,0) + X(7,3,13,1) + X(7,3,13,2) + X(7,3,14,0) + X(7,3,14,1) + X(7,3,14,2) + X(7,3,15,0) + X(7,3,15,1) + X(7,3,15,2) + X(7,5,0,0) + X(7,5,0,1) + X(7,5,0,2) + X(7,5,1,0) + X(7,5,1,1) + X(7,5,1,2) + X(7,5,2,0) + X(7,5,2,1) + X(7,5,2,2) + X(7,5,3,0) + X(7,5,3,1) + X(7,5,3,2) + X(7,5,4,0) + X(7,5,4,1) + X(7,5,4,2) + X(7,5,5,0) + X(7,5,5,1) + X(7,5,5,2) + X(7,5,6,0) + X(7,5,6,1) + X(7,5,6,2) + X(7,5,7,0) + X(7,5,7,1) + X(7,5,7,2) + X(7,5,8,0) + X(7,5,8,1) + X(7,5,8,2) + X(7,5,9,0) + X(7,5,9,1) + X(7,5,9,2) + X(7,5,10,0) + X(7,5,10,1) + X(7,5,10,2) + X(7,5,11,0) + X(7,5,11,1) + X(7,5,11,2) + X(7,5,12,0) + X(7,5,12,1) + X(7,5,12,2) + X(7,5,13,0) + X(7,5,13,1) + X(7,5,13,2) + X(7,5,14,0) + X(7,5,14,1) + X(7,5,14,2) + X(7,5,15,0) + X(7,5,15,1) + X(7,5,15,2) + 2*X(7,8,0,0) + 2*X(7,8,0,1) + 2*X(7,8,0,2) + 2*X(7,8,1,0) + 2*X(7,8,1,1) + 2*X(7,8,1,2) + 2*X(7,8,2,0) + 2*X(7,8,2,1) + 2*X(7,8,2,2) + 2*X(7,8,3,0) + 2*X(7,8,3,1) + 2*X(7,8,3,2) + 2*X(7,8,4,0) + 2*X(7,8,4,1) + 2*X(7,8,4,2) + 2*X(7,8,5,0) + 2*X(7,8,5,1) + 2*X(7,8,5,2) + 2*X(7,8,6,0) + 2*X(7,8,6,1) + 2*X(7,8,6,2) + 2*X(7,8,7,0) + 2*X(7,8,7,1) + 2*X(7,8,7,2) + 2*X(7,8,8,0) + 2*X(7,8,8,1) + 2*X(7,8,8,2) + 2*X(7,8,9,0) + 2*X(7,8,9,1) + 2*X(7,8,9,2) + 2*X(7,8,10,0) + 2*X(7,8,10,1) + 2*X(7,8,10,2) + 2*X(7,8,11,0) + 2*X(7,8,11,1) + 2*X(7,8,11,2) + 2*X(7,8,12,0) + 2*X(7,8,12,1) + 2*X(7,8,12,2) + 2*X(7,8,13,0) + 2*X(7,8,13,1) + 2*X(7,8,13,2) + 2*X(7,8,14,0) + 2*X(7,8,14,1) + 2*X(7,8,14,2) + 2*X(7,8,15,0) + 2*X(7,8,15,1) + 2*X(7,8,15,2) + X(7,9,0,0) + X(7,9,0,1) + X(7,9,0,2) + X(7,9,1,0) + X(7,9,1,1) + X(7,9,1,2) + X(7,9,2,0) + X(7,9,2,1) + X(7,9,2,2) + X(7,9,3,0) + X(7,9,3,1) + X(7,9,3,2) + X(7,9,4,0) + X(7,9,4,1) + X(7,9,4,2) + X(7,9,5,0) + X(7,9,5,1) + X(7,9,5,2) + X(7,9,6,0) + X(7,9,6,1) + X(7,9,6,2) + X(7,9,7,0) + X(7,9,7,1) + X(7,9,7,2) + X(7,9,8,0) + X(7,9,8,1) + X(7,9,8,2) + X(7,9,9,0) + X(7,9,9,1) + X(7,9,9,2) + X(7,9,10,0) + X(7,9,10,1) + X(7,9,10,2) + X(7,9,11,0) + X(7,9,11,1) + X(7,9,11,2) + X(7,9,12,0) + X(7,9,12,1) + X(7,9,12,2) + X(7,9,13,0) + X(7,9,13,1) + X(7,9,13,2) + X(7,9,14,0) + X(7,9,14,1) + X(7,9,14,2) + X(7,9,15,0) + X(7,9,15,1) + X(7,9,15,2) + X(8,1,0,0) + X(8,1,0,1) + X(8,1,0,2) + X(8,1,1,0) + X(8,1,1,1) + X(8,1,1,2) + X(8,1,2,0) + X(8,1,2,1) + X(8,1,2,2) + X(8,1,3,0) + X(8,1,3,1) + X(8,1,3,2) + X(8,1,4,0) + X(8,1,4,1) + X(8,1,4,2) + X(8,1,5,0) + X(8,1,5,1) + X(8,1,5,2) + X(8,1,6,0) + X(8,1,6,1) + X(8,1,6,2) + X(8,1,7,0) + X(8,1,7,1) + X(8,1,7,2) + X(8,1,8,0) + X(8,1,8,1) + X(8,1,8,2) + X(8,1,9,0) + X(8,1,9,1) + X(8,1,9,2) + X(8,1,10,0) + X(8,1,10,1) + X(8,1,10,2) + X(8,1,11,0) + X(8,1,11,1) + X(8,1,11,2) + X(8,1,12,0) + X(8,1,12,1) + X(8,1,12,2) + X(8,1,13,0) + X(8,1,13,1) + X(8,1,13,2) + X(8,1,14,0) + X(8,1,14,1) + X(8,1,14,2) + X(8,1,15,0) + X(8,1,15,1) + X(8,1,15,2) + 2*X(8,7,0,0) + 2*X(8,7,0,1) + 2*X(8,7,0,2) + 2*X(8,7,1,0) + 2*X(8,7,1,1) + 2*X(8,7,1,2) + 2*X(8,7,2,0) + 2*X(8,7,2,1) + 2*X(8,7,2,2) + 2*X(8,7,3,0) + 2*X(8,7,3,1) + 2*X(8,7,3,2) + 2*X(8,7,4,0) + 2*X(8,7,4,1) + 2*X(8,7,4,2) + 2*X(8,7,5,0) + 2*X(8,7,5,1) + 2*X(8,7,5,2) + 2*X(8,7,6,0) + 2*X(8,7,6,1) + 2*X(8,7,6,2) + 2*X(8,7,7,0) + 2*X(8,7,7,1) + 2*X(8,7,7,2) + 2*X(8,7,8,0) + 2*X(8,7,8,1) + 2*X(8,7,8,2) + 2*X(8,7,9,0) + 2*X(8,7,9,1) + 2*X(8,7,9,2) + 2*X(8,7,10,0) + 2*X(8,7,10,1) + 2*X(8,7,10,2) + 2*X(8,7,11,0) + 2*X(8,7,11,1) + 2*X(8,7,11,2) + 2*X(8,7,12,0) + 2*X(8,7,12,1) + 2*X(8,7,12,2) + 2*X(8,7,13,0) + 2*X(8,7,13,1) + 2*X(8,7,13,2) + 2*X(8,7,14,0) + 2*X(8,7,14,1) + 2*X(8,7,14,2) + 2*X(8,7,15,0) + 2*X(8,7,15,1) + 2*X(8,7,15,2) + 2*X(9,0,0,0) + 2*X(9,0,0,1) + 2*X(9,0,0,2) + 2*X(9,0,1,0) + 2*X(9,0,1,1) + 2*X(9,0,1,2) + 2*X(9,0,2,0) + 2*X(9,0,2,1) + 2*X(9,0,2,2) + 2*X(9,0,3,0) + 2*X(9,0,3,1) + 2*X(9,0,3,2) + 2*X(9,0,4,0) + 2*X(9,0,4,1) + 2*X(9,0,4,2) + 2*X(9,0,5,0) + 2*X(9,0,5,1) + 2*X(9,0,5,2) + 2*X(9,0,6,0) + 2*X(9,0,6,1) + 2*X(9,0,6,2) + 2*X(9,0,7,0) + 2*X(9,0,7,1) + 2*X(9,0,7,2) + 2*X(9,0,8,0) + 2*X(9,0,8,1) + 2*X(9,0,8,2) + 2*X(9,0,9,0) + 2*X(9,0,9,1) + 2*X(9,0,9,2) + 2*X(9,0,10,0) + 2*X(9,0,10,1) + 2*X(9,0,10,2) + 2*X(9,0,11,0) + 2*X(9,0,11,1) + 2*X(9,0,11,2) + 2*X(9,0,12,0) + 2*X(9,0,12,1) + 2*X(9,0,12,2) + 2*X(9,0,13,0) + 2*X(9,0,13,1) + 2*X(9,0,13,2) + 2*X(9,0,14,0) + 2*X(9,0,14,1) + 2*X(9,0,14,2) + 2*X(9,0,15,0) + 2*X(9,0,15,1) + 2*X(9,0,15,2) + 2*X(9,2,0,0) + 2*X(9,2,0,1) + 2*X(9,2,0,2) + 2*X(9,2,1,0) + 2*X(9,2,1,1) + 2*X(9,2,1,2) + 2*X(9,2,2,0) + 2*X(9,2,2,1) + 2*X(9,2,2,2) + 2*X(9,2,3,0) + 2*X(9,2,3,1) + 2*X(9,2,3,2) + 2*X(9,2,4,0) + 2*X(9,2,4,1) + 2*X(9,2,4,2) + 2*X(9,2,5,0) + 2*X(9,2,5,1) + 2*X(9,2,5,2) + 2*X(9,2,6,0) + 2*X(9,2,6,1) + 2*X(9,2,6,2) + 2*X(9,2,7,0) + 2*X(9,2,7,1) + 2*X(9,2,7,2) + 2*X(9,2,8,0) + 2*X(9,2,8,1) + 2*X(9,2,8,2) + 2*X(9,2,9,0) + 2*X(9,2,9,1) + 2*X(9,2,9,2) + 2*X(9,2,10,0) + 2*X(9,2,10,1) + 2*X(9,2,10,2) + 2*X(9,2,11,0) + 2*X(9,2,11,1) + 2*X(9,2,11,2) + 2*X(9,2,12,0) + 2*X(9,2,12,1) + 2*X(9,2,12,2) + 2*X(9,2,13,0) + 2*X(9,2,13,1) + 2*X(9,2,13,2) + 2*X(9,2,14,0) + 2*X(9,2,14,1) + 2*X(9,2,14,2) + 2*X(9,2,15,0) + 2*X(9,2,15,1) + 2*X(9,2,15,2) + X(9,7,0,0) + X(9,7,0,1) + X(9,7,0,2) + X(9,7,1,0) + X(9,7,1,1) + X(9,7,1,2) + X(9,7,2,0) + X(9,7,2,1) + X(9,7,2,2) + X(9,7,3,0) + X(9,7,3,1) + X(9,7,3,2) + X(9,7,4,0) + X(9,7,4,1) + X(9,7,4,2) + X(9,7,5,0) + X(9,7,5,1) + X(9,7,5,2) + X(9,7,6,0) + X(9,7,6,1) + X(9,7,6,2) + X(9,7,7,0) + X(9,7,7,1) + X(9,7,7,2) + X(9,7,8,0) + X(9,7,8,1) + X(9,7,8,2) + X(9,7,9,0) + X(9,7,9,1) + X(9,7,9,2) + X(9,7,10,0) + X(9,7,10,1) + X(9,7,10,2) + X(9,7,11,0) + X(9,7,11,1) + X(9,7,11,2) + X(9,7,12,0) + X(9,7,12,1) + X(9,7,12,2) + X(9,7,13,0) + X(9,7,13,1) + X(9,7,13,2) + X(9,7,14,0) + X(9,7,14,1) + X(9,7,14,2) + X(9,7,15,0) + X(9,7,15,1) + X(9,7,15,2) + 10*Y(0,0,0) + 15*Y(0,0,1) + 20*Y(0,0,2) =L= 70 ; (LHS = 0)
     

---- existencia_ruta  =L=  

existencia_ruta(0,0,0,0)..  X(0,0,0,0) =L= 0 ; (LHS = 0)
     
existencia_ruta(0,0,0,1)..  X(0,0,0,1) =L= 0 ; (LHS = 0)
     
existencia_ruta(0,0,0,2)..  X(0,0,0,2) =L= 0 ; (LHS = 0)
     
REMAINING 4797 ENTRIES SKIPPED


---- usabilidad_ruta  =L=  

usabilidad_ruta(0,0,0,0)..  X(0,0,0,0) - 99*H(0,0) =L= 0 ; (LHS = 0)
     
usabilidad_ruta(0,0,0,1)..  X(0,0,0,1) - 99*H(0,0) =L= 0 ; (LHS = 0)
     
usabilidad_ruta(0,0,0,2)..  X(0,0,0,2) - 99*H(0,0) =L= 0 ; (LHS = 0)
     
REMAINING 4797 ENTRIES SKIPPED


---- orientacion  =E=  Si se habilita un sentido se ha de habilitar el opuesto

orientacion(0,1)..  H(0,1) - H(1,0) =E= 0 ; (LHS = 0)
     
orientacion(0,2)..  H(0,2) - H(2,0) =E= 0 ; (LHS = 0)
     
orientacion(0,3)..  H(0,3) - H(3,0) =E= 0 ; (LHS = 0)
     
REMAINING 87 ENTRIES SKIPPED


---- lim_puentes  =L=  Limite de puentes que podemos reconstruir

lim_puentes..  H(0,0) + H(0,1) + H(0,2) + H(0,3) + H(0,4) + H(0,5) + H(0,6) + H(0,7) + H(0,8) + H(0,9) + H(1,0) + H(1,1) + H(1,2) + H(1,3) + H(1,4) + H(1,5) + H(1,6) + H(1,7) + H(1,8) + H(1,9) + H(2,0) + H(2,1) + H(2,2) + H(2,3) + H(2,4) + H(2,5) + H(2,6) + H(2,7) + H(2,8) + H(2,9) + H(3,0) + H(3,1) + H(3,2) + H(3,3) + H(3,4) + H(3,5) + H(3,6) + H(3,7) + H(3,8) + H(3,9) + H(4,0) + H(4,1) + H(4,2) + H(4,3) + H(4,4) + H(4,5) + H(4,6) + H(4,7) + H(4,8) + H(4,9) + H(5,0) + H(5,1) + H(5,2) + H(5,3) + H(5,4) + H(5,5) + H(5,6) + H(5,7) + H(5,8) + H(5,9) + H(6,0) + H(6,1) + H(6,2) + H(6,3) + H(6,4) + H(6,5) + H(6,6) + H(6,7) + H(6,8) + H(6,9) + H(7,0) + H(7,1) + H(7,2) + H(7,3) + H(7,4) + H(7,5) + H(7,6) + H(7,7) + H(7,8) + H(7,9) + H(8,0) + H(8,1) + H(8,2) + H(8,3) + H(8,4) + H(8,5) + H(8,6) + H(8,7) + H(8,8) + H(8,9) + H(9,0) + H(9,1) + H(9,2) + H(9,3) + H(9,4) + H(9,5) + H(9,6) + H(9,7) + H(9,8) + H(9,9) =L= 2 ; (LHS = 0)
     

---- arco_usado  =G=  Pasa algun vehiculo por este nodo

arco_usado(0,0)..  - X(0,0,0,0) - X(0,0,0,1) - X(0,0,0,2) - X(0,0,1,0) - X(0,0,1,1) - X(0,0,1,2) - X(0,0,2,0) - X(0,0,2,1) - X(0,0,2,2) - X(0,0,3,0) - X(0,0,3,1) - X(0,0,3,2) - X(0,0,4,0) - X(0,0,4,1) - X(0,0,4,2) - X(0,0,5,0) - X(0,0,5,1) - X(0,0,5,2) - X(0,0,6,0) - X(0,0,6,1) - X(0,0,6,2) - X(0,0,7,0) - X(0,0,7,1) - X(0,0,7,2) - X(0,0,8,0) - X(0,0,8,1) - X(0,0,8,2) - X(0,0,9,0) - X(0,0,9,1) - X(0,0,9,2) - X(0,0,10,0) - X(0,0,10,1) - X(0,0,10,2) - X(0,0,11,0) - X(0,0,11,1) - X(0,0,11,2) - X(0,0,12,0) - X(0,0,12,1) - X(0,0,12,2) - X(0,0,13,0) - X(0,0,13,1) - X(0,0,13,2) - X(0,0,14,0) - X(0,0,14,1) - X(0,0,14,2) - X(0,0,15,0) - X(0,0,15,1) - X(0,0,15,2) + 99*Used(0,0) =G= 0 ; (LHS = 0)
     
arco_usado(0,1)..  - X(0,1,0,0) - X(0,1,0,1) - X(0,1,0,2) - X(0,1,1,0) - X(0,1,1,1) - X(0,1,1,2) - X(0,1,2,0) - X(0,1,2,1) - X(0,1,2,2) - X(0,1,3,0) - X(0,1,3,1) - X(0,1,3,2) - X(0,1,4,0) - X(0,1,4,1) - X(0,1,4,2) - X(0,1,5,0) - X(0,1,5,1) - X(0,1,5,2) - X(0,1,6,0) - X(0,1,6,1) - X(0,1,6,2) - X(0,1,7,0) - X(0,1,7,1) - X(0,1,7,2) - X(0,1,8,0) - X(0,1,8,1) - X(0,1,8,2) - X(0,1,9,0) - X(0,1,9,1) - X(0,1,9,2) - X(0,1,10,0) - X(0,1,10,1) - X(0,1,10,2) - X(0,1,11,0) - X(0,1,11,1) - X(0,1,11,2) - X(0,1,12,0) - X(0,1,12,1) - X(0,1,12,2) - X(0,1,13,0) - X(0,1,13,1) - X(0,1,13,2) - X(0,1,14,0) - X(0,1,14,1) - X(0,1,14,2) - X(0,1,15,0) - X(0,1,15,1) - X(0,1,15,2) + 99*Used(0,1) =G= 0 ; (LHS = 0)
     
arco_usado(0,2)..  - X(0,2,0,0) - X(0,2,0,1) - X(0,2,0,2) - X(0,2,1,0) - X(0,2,1,1) - X(0,2,1,2) - X(0,2,2,0) - X(0,2,2,1) - X(0,2,2,2) - X(0,2,3,0) - X(0,2,3,1) - X(0,2,3,2) - X(0,2,4,0) - X(0,2,4,1) - X(0,2,4,2) - X(0,2,5,0) - X(0,2,5,1) - X(0,2,5,2) - X(0,2,6,0) - X(0,2,6,1) - X(0,2,6,2) - X(0,2,7,0) - X(0,2,7,1) - X(0,2,7,2) - X(0,2,8,0) - X(0,2,8,1) - X(0,2,8,2) - X(0,2,9,0) - X(0,2,9,1) - X(0,2,9,2) - X(0,2,10,0) - X(0,2,10,1) - X(0,2,10,2) - X(0,2,11,0) - X(0,2,11,1) - X(0,2,11,2) - X(0,2,12,0) - X(0,2,12,1) - X(0,2,12,2) - X(0,2,13,0) - X(0,2,13,1) - X(0,2,13,2) - X(0,2,14,0) - X(0,2,14,1) - X(0,2,14,2) - X(0,2,15,0) - X(0,2,15,1) - X(0,2,15,2) + 99*Used(0,2) =G= 0 ; (LHS = 0)
     
REMAINING 97 ENTRIES SKIPPED


---- arco_usado_orientacion  =E=  

arco_usado_orientacion(0,1)..  Used(0,1) - Used(1,0) =E= 0 ; (LHS = 0)
     
arco_usado_orientacion(0,2)..  Used(0,2) - Used(2,0) =E= 0 ; (LHS = 0)
     
arco_usado_orientacion(0,3)..  Used(0,3) - Used(3,0) =E= 0 ; (LHS = 0)
     
REMAINING 87 ENTRIES SKIPPED


---- fiabilidad  =G=  Restriccion que impide elegir alguna ruta que tenga mas de cierta probabilidad de no ser usable

fiabilidad..  - 0.971430847803229*Used(0,1) - 0.0144995696951151*Used(0,3) - 0.915935735211525*Used(0,5) - 3.83650126771712*Used(0,6) - 0.2688167584278*Used(0,9) - 0.971430847803229*Used(1,0) - 2.55639334852438*Used(1,6) - 2.47393118833241*Used(1,8) - 0.395928676331139*Used(2,4) - 0.0740005814437769*Used(2,9) - 0.0144995696951151*Used(3,0) - 1.32192809488736*Used(3,4) - 0.200912693925996*Used(3,7) - 0.395928676331139*Used(4,2) - 1.32192809488736*Used(4,3) - 0.200912693925996*Used(4,5) - 0.915935735211525*Used(5,0) - 0.200912693925996*Used(5,4) - 0.15200309344505*Used(5,7) - 3.83650126771712*Used(6,0) - 2.55639334852438*Used(6,1) - 0.200912693925996*Used(7,3) - 0.15200309344505*Used(7,5) - 0.251538766995964*Used(7,8) - 0.810966175609983*Used(7,9) - 2.47393118833241*Used(8,1) - 0.251538766995964*Used(8,7) - 0.2688167584278*Used(9,0) - 0.0740005814437769*Used(9,2) - 0.810966175609983*Used(9,7) =G= -1.73696559416621 ; (LHS = 0)
     

---- f_ayuda  =E=  Funcion objetivo 1. Cantidad total del recurso repartida en cierta unidad

f_ayuda..  - Z_(0) - Z_(1) - Z_(2) - Z_(3) - Z_(4) - Z_(5) - Z_(6) - Z_(7) - Z_(8) - Z_(9) + Ayuda =E= -32 ; (LHS = 0, INFES = 32 ****)
     

---- f_equidad  =E=  Funcion objetivo 2.  Criterio de equidad. Numero de nodos a los que se les reparte al menos una unidad de recurso

f_equidad..  - auxZ(0) - auxZ(1) - auxZ(2) - auxZ(3) - auxZ(4) - auxZ(5) - auxZ(6) - auxZ(7) - auxZ(8) - auxZ(9) + Eq =E= 0 ; (LHS = 0)
     
GAMS 41.2.0  5110e5ff Nov 14, 2022          WEX-WEI x86 64bit/MS Windows - 02/12/23 20:38:08 Page 4
modelo sencillo reconstruccion + reparto 1
Column Listing      SOLVE modelo1 Using MIP From line 200


---- X  Vehiculos de tipo v que van de i a j en el periodo t

X(0,0,0,0)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       lim_salida(0,0,0)
        1       existencia_ruta(0,0,0,0)
        1       usabilidad_ruta(0,0,0,0)
       -1       arco_usado(0,0)

X(0,0,0,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       lim_salida(0,0,1)
        1       existencia_ruta(0,0,0,1)
        1       usabilidad_ruta(0,0,0,1)
       -1       arco_usado(0,0)

X(0,0,0,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       lim_salida(0,0,2)
        1       existencia_ruta(0,0,0,2)
        1       usabilidad_ruta(0,0,0,2)
       -1       arco_usado(0,0)

REMAINING 4797 ENTRIES SKIPPED

---- Y  Vehiculos de tipo v que hay en j en el periodo t. Pueden seguir su ruta o bien quedarse en j para proseguir su ruta en otro periodo o bien permanecer en j hasta el final del ultimo periodo

Y(0,0,0)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       definir_Y(0,1,0)
       -1       lim_salida(0,1,0)
       10       flujo_ini_0

Y(0,0,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       definir_Y(0,1,1)
       -1       lim_salida(0,1,1)
       15       flujo_ini_0

Y(0,0,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       definir_Y(0,1,2)
       -1       lim_salida(0,1,2)
       20       flujo_ini_0

REMAINING 477 ENTRIES SKIPPED

---- Z  Vehiculos de tipo v totales emplazados en j al final del ultimo periodo. se asume que en ese momento hacen el reparto a j

Z(0,0)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       definir_Z(0,0)
       -1       definir_Z_(0)

Z(0,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       definir_Z(0,1)
       -2       definir_Z_(0)

Z(0,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       definir_Z(0,2)
       -5       definir_Z_(0)

REMAINING 27 ENTRIES SKIPPED

---- Z_  Ayuda total repartida a j

Z_(0)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       definir_Z_(0)
       -1       definir_auxZ(0)
       -1       f_ayuda

Z_(1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       definir_Z_(1)
       -1       definir_auxZ(1)
       -1       f_ayuda

Z_(2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       definir_Z_(2)
       -1       definir_auxZ(2)
       -1       f_ayuda

REMAINING 7 ENTRIES SKIPPED

---- auxZ  Variable binaria que representa si se reparte al menos un vehiculo de recurso a j

auxZ(0)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       definir_auxZ(0)
       -1       f_equidad

auxZ(1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       definir_auxZ(1)
       -1       f_equidad

auxZ(2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
        1       definir_auxZ(2)
       -1       f_equidad

REMAINING 7 ENTRIES SKIPPED

---- H  variable binaria que determina si habilitamos el puente de i a j

H(0,0)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
      -99       usabilidad_ruta(0,0,0,0)
      -99       usabilidad_ruta(0,0,0,1)
      -99       usabilidad_ruta(0,0,0,2)
      -99       usabilidad_ruta(0,0,1,0)
      -99       usabilidad_ruta(0,0,1,1)
      -99       usabilidad_ruta(0,0,1,2)
      -99       usabilidad_ruta(0,0,2,0)
      -99       usabilidad_ruta(0,0,2,1)
      -99       usabilidad_ruta(0,0,2,2)
      -99       usabilidad_ruta(0,0,3,0)
      -99       usabilidad_ruta(0,0,3,1)
      -99       usabilidad_ruta(0,0,3,2)
      -99       usabilidad_ruta(0,0,4,0)
      -99       usabilidad_ruta(0,0,4,1)
      -99       usabilidad_ruta(0,0,4,2)
      -99       usabilidad_ruta(0,0,5,0)
      -99       usabilidad_ruta(0,0,5,1)
      -99       usabilidad_ruta(0,0,5,2)
      -99       usabilidad_ruta(0,0,6,0)
      -99       usabilidad_ruta(0,0,6,1)
      -99       usabilidad_ruta(0,0,6,2)
      -99       usabilidad_ruta(0,0,7,0)
      -99       usabilidad_ruta(0,0,7,1)
      -99       usabilidad_ruta(0,0,7,2)
      -99       usabilidad_ruta(0,0,8,0)
      -99       usabilidad_ruta(0,0,8,1)
      -99       usabilidad_ruta(0,0,8,2)
      -99       usabilidad_ruta(0,0,9,0)
      -99       usabilidad_ruta(0,0,9,1)
      -99       usabilidad_ruta(0,0,9,2)
      -99       usabilidad_ruta(0,0,10,0)
      -99       usabilidad_ruta(0,0,10,1)
      -99       usabilidad_ruta(0,0,10,2)
      -99       usabilidad_ruta(0,0,11,0)
      -99       usabilidad_ruta(0,0,11,1)
      -99       usabilidad_ruta(0,0,11,2)
      -99       usabilidad_ruta(0,0,12,0)
      -99       usabilidad_ruta(0,0,12,1)
      -99       usabilidad_ruta(0,0,12,2)
      -99       usabilidad_ruta(0,0,13,0)
      -99       usabilidad_ruta(0,0,13,1)
      -99       usabilidad_ruta(0,0,13,2)
      -99       usabilidad_ruta(0,0,14,0)
      -99       usabilidad_ruta(0,0,14,1)
      -99       usabilidad_ruta(0,0,14,2)
      -99       usabilidad_ruta(0,0,15,0)
      -99       usabilidad_ruta(0,0,15,1)
      -99       usabilidad_ruta(0,0,15,2)
        1       lim_puentes

H(0,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
      -99       usabilidad_ruta(0,1,0,0)
      -99       usabilidad_ruta(0,1,0,1)
      -99       usabilidad_ruta(0,1,0,2)
      -99       usabilidad_ruta(0,1,1,0)
      -99       usabilidad_ruta(0,1,1,1)
      -99       usabilidad_ruta(0,1,1,2)
      -99       usabilidad_ruta(0,1,2,0)
      -99       usabilidad_ruta(0,1,2,1)
      -99       usabilidad_ruta(0,1,2,2)
      -99       usabilidad_ruta(0,1,3,0)
      -99       usabilidad_ruta(0,1,3,1)
      -99       usabilidad_ruta(0,1,3,2)
      -99       usabilidad_ruta(0,1,4,0)
      -99       usabilidad_ruta(0,1,4,1)
      -99       usabilidad_ruta(0,1,4,2)
      -99       usabilidad_ruta(0,1,5,0)
      -99       usabilidad_ruta(0,1,5,1)
      -99       usabilidad_ruta(0,1,5,2)
      -99       usabilidad_ruta(0,1,6,0)
      -99       usabilidad_ruta(0,1,6,1)
      -99       usabilidad_ruta(0,1,6,2)
      -99       usabilidad_ruta(0,1,7,0)
      -99       usabilidad_ruta(0,1,7,1)
      -99       usabilidad_ruta(0,1,7,2)
      -99       usabilidad_ruta(0,1,8,0)
      -99       usabilidad_ruta(0,1,8,1)
      -99       usabilidad_ruta(0,1,8,2)
      -99       usabilidad_ruta(0,1,9,0)
      -99       usabilidad_ruta(0,1,9,1)
      -99       usabilidad_ruta(0,1,9,2)
      -99       usabilidad_ruta(0,1,10,0)
      -99       usabilidad_ruta(0,1,10,1)
      -99       usabilidad_ruta(0,1,10,2)
      -99       usabilidad_ruta(0,1,11,0)
      -99       usabilidad_ruta(0,1,11,1)
      -99       usabilidad_ruta(0,1,11,2)
      -99       usabilidad_ruta(0,1,12,0)
      -99       usabilidad_ruta(0,1,12,1)
      -99       usabilidad_ruta(0,1,12,2)
      -99       usabilidad_ruta(0,1,13,0)
      -99       usabilidad_ruta(0,1,13,1)
      -99       usabilidad_ruta(0,1,13,2)
      -99       usabilidad_ruta(0,1,14,0)
      -99       usabilidad_ruta(0,1,14,1)
      -99       usabilidad_ruta(0,1,14,2)
      -99       usabilidad_ruta(0,1,15,0)
      -99       usabilidad_ruta(0,1,15,1)
      -99       usabilidad_ruta(0,1,15,2)
        1       orientacion(0,1)
       -1       orientacion(1,0)
        1       lim_puentes

H(0,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
      -99       usabilidad_ruta(0,2,0,0)
      -99       usabilidad_ruta(0,2,0,1)
      -99       usabilidad_ruta(0,2,0,2)
      -99       usabilidad_ruta(0,2,1,0)
      -99       usabilidad_ruta(0,2,1,1)
      -99       usabilidad_ruta(0,2,1,2)
      -99       usabilidad_ruta(0,2,2,0)
      -99       usabilidad_ruta(0,2,2,1)
      -99       usabilidad_ruta(0,2,2,2)
      -99       usabilidad_ruta(0,2,3,0)
      -99       usabilidad_ruta(0,2,3,1)
      -99       usabilidad_ruta(0,2,3,2)
      -99       usabilidad_ruta(0,2,4,0)
      -99       usabilidad_ruta(0,2,4,1)
      -99       usabilidad_ruta(0,2,4,2)
      -99       usabilidad_ruta(0,2,5,0)
      -99       usabilidad_ruta(0,2,5,1)
      -99       usabilidad_ruta(0,2,5,2)
      -99       usabilidad_ruta(0,2,6,0)
      -99       usabilidad_ruta(0,2,6,1)
      -99       usabilidad_ruta(0,2,6,2)
      -99       usabilidad_ruta(0,2,7,0)
      -99       usabilidad_ruta(0,2,7,1)
      -99       usabilidad_ruta(0,2,7,2)
      -99       usabilidad_ruta(0,2,8,0)
      -99       usabilidad_ruta(0,2,8,1)
      -99       usabilidad_ruta(0,2,8,2)
      -99       usabilidad_ruta(0,2,9,0)
      -99       usabilidad_ruta(0,2,9,1)
      -99       usabilidad_ruta(0,2,9,2)
      -99       usabilidad_ruta(0,2,10,0)
      -99       usabilidad_ruta(0,2,10,1)
      -99       usabilidad_ruta(0,2,10,2)
      -99       usabilidad_ruta(0,2,11,0)
      -99       usabilidad_ruta(0,2,11,1)
      -99       usabilidad_ruta(0,2,11,2)
      -99       usabilidad_ruta(0,2,12,0)
      -99       usabilidad_ruta(0,2,12,1)
      -99       usabilidad_ruta(0,2,12,2)
      -99       usabilidad_ruta(0,2,13,0)
      -99       usabilidad_ruta(0,2,13,1)
      -99       usabilidad_ruta(0,2,13,2)
      -99       usabilidad_ruta(0,2,14,0)
      -99       usabilidad_ruta(0,2,14,1)
      -99       usabilidad_ruta(0,2,14,2)
      -99       usabilidad_ruta(0,2,15,0)
      -99       usabilidad_ruta(0,2,15,1)
      -99       usabilidad_ruta(0,2,15,2)
        1       orientacion(0,2)
       -1       orientacion(2,0)
        1       lim_puentes

REMAINING 97 ENTRIES SKIPPED

---- Used  

Used(0,0)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       99       arco_usado(0,0)

Used(0,1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       99       arco_usado(0,1)
        1       arco_usado_orientacion(0,1)
       -1       arco_usado_orientacion(1,0)
       -0.9714  fiabilidad

Used(0,2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
       99       arco_usado(0,2)
        1       arco_usado_orientacion(0,2)
       -1       arco_usado_orientacion(2,0)

REMAINING 97 ENTRIES SKIPPED

---- Ayuda  Total demanda satisfecha

Ayuda
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       f_ayuda


---- Eq  Criterio de equidad. Numero de nodos a los que se reparte al menos un vehiculo

Eq
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       f_equidad

GAMS 41.2.0  5110e5ff Nov 14, 2022          WEX-WEI x86 64bit/MS Windows - 02/12/23 20:38:08 Page 5
modelo sencillo reconstruccion + reparto 1
Range Statistics    SOLVE modelo1 Using MIP From line 200


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 1.737E+00, 9.900E+01] - Zero values observed as well
Bound     [min, max] : [ 1.000E+00, 1.000E+00] - Zero values observed as well
Matrix    [min, max] : [ 1.450E-02, 9.900E+01]

GAMS 41.2.0  5110e5ff Nov 14, 2022          WEX-WEI x86 64bit/MS Windows - 02/12/23 20:38:08 Page 6
modelo sencillo reconstruccion + reparto 1
Model Statistics    SOLVE modelo1 Using MIP From line 200


MODEL STATISTICS

BLOCKS OF EQUATIONS          16     SINGLE EQUATIONS       10,892
BLOCKS OF VARIABLES           9     SINGLE VARIABLES        5,532
NON ZERO ELEMENTS        35,652     DISCRETE VARIABLES      5,520



**** The model exceeds the demo license limits for linear models of more than 2000 rows or columns
     As an academic user, you can submit large models to the NEOS service for free (see https://www.gams.com/neos)
     Alternatively, feel free to contact sales@gams.com to discuss your options

**** Terminated due to a licensing error
**** License file: C:\Users\Antonio\Documents\GAMS\gamslice.txt

**** Current license content:
     GAMS Demo license for Antonio Sevilla Sastre   G221121|0002CO-GEN
     UCM, Spain                                                       
     1084556100 **GAMS Demo license restricted to non-commercial use**
     189466700C                                                       
     DL079880                                       C DEMO            
     antsev01@ucm.es, Antonio Sevilla Sastre                          
